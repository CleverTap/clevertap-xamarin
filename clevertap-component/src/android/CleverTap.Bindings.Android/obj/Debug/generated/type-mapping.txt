com/clevertap/android/sdk/ab_testing/CTABTestController = Com.Clevertap.Android.Sdk.Ab_testing.CTABTestController
  <init>(Landroid/content/Context;Lcom/clevertap/android/sdk/CleverTapInstanceConfig;Ljava/lang/String;Lcom/clevertap/android/sdk/ab_testing/CTABTestListener;)V = .ctor(Android.Content.Context, Com.Clevertap.Android.Sdk.CleverTapInstanceConfig, string, Com.Clevertap.Android.Sdk.Ab_testing.ICTABTestListener)
  getBooleanVariable(Ljava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Boolean; = GetBooleanVariable(string, Java.Lang.Boolean)
  getDoubleVariable(Ljava/lang/String;Ljava/lang/Double;)Ljava/lang/Double; = GetDoubleVariable(string, Java.Lang.Double)
  getIntegerVariable(Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer; = GetIntegerVariable(string, Java.Lang.Integer)
  getListOfBooleanVariable(Ljava/lang/String;Ljava/util/List;)Ljava/util/List; = GetListOfBooleanVariable(string, System.Collections.Generic.IList<Java.Lang.Boolean>)
  getListOfDoubleVariable(Ljava/lang/String;Ljava/util/List;)Ljava/util/List; = GetListOfDoubleVariable(string, System.Collections.Generic.IList<Java.Lang.Double>)
  getListOfIntegerVariable(Ljava/lang/String;Ljava/util/List;)Ljava/util/List; = GetListOfIntegerVariable(string, System.Collections.Generic.IList<Java.Lang.Integer>)
  getListOfStringVariable(Ljava/lang/String;Ljava/util/List;)Ljava/util/List; = GetListOfStringVariable(string, System.Collections.Generic.IList<string>)
  getMapOfBooleanVariable(Ljava/lang/String;Ljava/util/Map;)Ljava/util/Map; = GetMapOfBooleanVariable(string, System.Collections.Generic.IDictionary<string, Java.Lang.Boolean>)
  getMapOfDoubleVariable(Ljava/lang/String;Ljava/util/Map;)Ljava/util/Map; = GetMapOfDoubleVariable(string, System.Collections.Generic.IDictionary<string, Java.Lang.Double>)
  getMapOfIntegerVariable(Ljava/lang/String;Ljava/util/Map;)Ljava/util/Map; = GetMapOfIntegerVariable(string, System.Collections.Generic.IDictionary<string, Java.Lang.Integer>)
  getMapOfStringVariable(Ljava/lang/String;Ljava/util/Map;)Ljava/util/Map; = GetMapOfStringVariable(string, System.Collections.Generic.IDictionary<string, string>)
  getStringVariable(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = GetStringVariable(string, string)
  registerBooleanVariable(Ljava/lang/String;)V = RegisterBooleanVariable(string)
  registerDoubleVariable(Ljava/lang/String;)V = RegisterDoubleVariable(string)
  registerIntegerVariable(Ljava/lang/String;)V = RegisterIntegerVariable(string)
  registerListOfBooleanVariable(Ljava/lang/String;)V = RegisterListOfBooleanVariable(string)
  registerListOfDoubleVariable(Ljava/lang/String;)V = RegisterListOfDoubleVariable(string)
  registerListOfIntegerVariable(Ljava/lang/String;)V = RegisterListOfIntegerVariable(string)
  registerListOfStringVariable(Ljava/lang/String;)V = RegisterListOfStringVariable(string)
  registerMapOfBooleanVariable(Ljava/lang/String;)V = RegisterMapOfBooleanVariable(string)
  registerMapOfDoubleVariable(Ljava/lang/String;)V = RegisterMapOfDoubleVariable(string)
  registerMapOfIntegerVariable(Ljava/lang/String;)V = RegisterMapOfIntegerVariable(string)
  registerMapOfStringVariable(Ljava/lang/String;)V = RegisterMapOfStringVariable(string)
  registerStringVariable(Ljava/lang/String;)V = RegisterStringVariable(string)
  resetWithGuid(Ljava/lang/String;)V = ResetWithGuid(string)
  updateExperiments(Lorg/json/JSONArray;)V = UpdateExperiments(Org.Json.JSONArray)
com/clevertap/android/sdk/ab_testing/CTABTestListener = Com.Clevertap.Android.Sdk.Ab_testing.ICTABTestListener
  ABExperimentsUpdated()V = ABExperimentsUpdated()
com/clevertap/android/sdk/ab_testing/gesture/ConnectionGesture = Com.Clevertap.Android.Sdk.Ab_testing.Gesture.ConnectionGesture
  <init>(Lcom/clevertap/android/sdk/ab_testing/gesture/ConnectionGesture$OnGestureListener;)V = .ctor(Com.Clevertap.Android.Sdk.Ab_testing.Gesture.ConnectionGesture.IOnGestureListener)
  onAccuracyChanged(Landroid/hardware/Sensor;I)V = OnAccuracyChanged(Android.Hardware.Sensor, Android.Hardware.SensorStatus)
  onSensorChanged(Landroid/hardware/SensorEvent;)V = OnSensorChanged(Android.Hardware.SensorEvent)
com/clevertap/android/sdk/ab_testing/models/CTABVariant = Com.Clevertap.Android.Sdk.Ab_testing.Models.CTABVariant
  getActions()Ljava/util/ArrayList; = Actions
  getId()Ljava/lang/String; = Id
  getVars()Lorg/json/JSONArray; = Vars
  getVersion()I = Version
  addActions(Lorg/json/JSONArray;)V = AddActions(Org.Json.JSONArray)
  addImageUrls(Ljava/util/List;)V = AddImageUrls(System.Collections.Generic.IList<string>)
  cleanup()V = Cleanup()
  clearActions()V = ClearActions()
  initWithJSON(Lorg/json/JSONObject;)Lcom/clevertap/android/sdk/ab_testing/models/CTABVariant; = InitWithJSON(Org.Json.JSONObject)
  removeActionsByName(Lorg/json/JSONArray;)V = RemoveActionsByName(Org.Json.JSONArray)
com/clevertap/android/sdk/ab_testing/uieditor/UIEditor = Com.Clevertap.Android.Sdk.Ab_testing.Uieditor.UIEditor
  <init>(Landroid/content/Context;Lcom/clevertap/android/sdk/CleverTapInstanceConfig;)V = .ctor(Android.Content.Context, Com.Clevertap.Android.Sdk.CleverTapInstanceConfig)
  addActivity(Landroid/app/Activity;)V = AddActivity(Android.App.Activity)
  applyVariants(Ljava/util/Set;Z)V = ApplyVariants(System.Collections.Generic.ICollection<Com.Clevertap.Android.Sdk.Ab_testing.Models.CTABVariant>, bool)
  loadSnapshotConfig(Lorg/json/JSONObject;)Z = LoadSnapshotConfig(Org.Json.JSONObject)
  removeActivity(Landroid/app/Activity;)V = RemoveActivity(Android.App.Activity)
  stopVariants()V = StopVariants()
  writeSnapshot(Ljava/io/OutputStream;)V = WriteSnapshot(System.IO.Stream)
com/clevertap/android/sdk/ActivityLifecycleCallback = Com.Clevertap.Android.Sdk.ActivityLifecycleCallback
  <init>()V = .ctor()
  register(Landroid/app/Application;)V = Register(Android.App.Application)
  register(Landroid/app/Application;Ljava/lang/String;)V = Register(Android.App.Application, string)
com/clevertap/android/sdk/Application = Com.Clevertap.Android.Sdk.Application
  <init>()V = .ctor()
com/clevertap/android/sdk/BuildConfig = Com.Clevertap.Android.Sdk.BuildConfig
  <init>()V = .ctor()
  APPLICATION_ID = ApplicationId
  BUILD_TYPE = BuildType
  DEBUG = Debug
  FLAVOR = Flavor
  SDK_VERSION_STRING = SdkVersionString
  VERSION_CODE = VersionCode
  VERSION_NAME = VersionName
com/clevertap/android/sdk/CleverTapAPI = Com.Clevertap.Android.Sdk.CleverTapAPI
  NOTIFICATION_TAG = NotificationTag
  getAllInboxMessages()Ljava/util/ArrayList; = AllInboxMessages
  getCleverTapAttributionIdentifier()Ljava/lang/String; = CleverTapAttributionIdentifier
  getCleverTapID()Ljava/lang/String; = CleverTapID
  getCTExperimentsListener()Lcom/clevertap/android/sdk/CTExperimentsListener; = CTExperimentsListener
  setCTExperimentsListener(Lcom/clevertap/android/sdk/CTExperimentsListener;)V = CTExperimentsListener
  getCTNotificationInboxListener()Lcom/clevertap/android/sdk/CTInboxListener; = CTNotificationInboxListener
  setCTNotificationInboxListener(Lcom/clevertap/android/sdk/CTInboxListener;)V = CTNotificationInboxListener
  getDebugLevel()I = DebugLevel
  setDebugLevel(I)V = DebugLevel
  getDeviceInfo()Ljava/util/Map; = DeviceInfo
  getDevicePushTokenRefreshListener()Lcom/clevertap/android/sdk/CleverTapAPI$DevicePushTokenRefreshListener; = DevicePushTokenRefreshListener
  setDevicePushTokenRefreshListener(Lcom/clevertap/android/sdk/CleverTapAPI$DevicePushTokenRefreshListener;)V = DevicePushTokenRefreshListener
  getHistory()Ljava/util/Map; = History
  getInAppNotificationListener()Lcom/clevertap/android/sdk/InAppNotificationListener; = InAppNotificationListener
  setInAppNotificationListener(Lcom/clevertap/android/sdk/InAppNotificationListener;)V = InAppNotificationListener
  getInboxMessageCount()I = InboxMessageCount
  getInboxMessageUnreadCount()I = InboxMessageUnreadCount
  getLocation()Landroid/location/Location; = Location
  setLocation(Landroid/location/Location;)V = Location
  getPreviousVisitTime()I = PreviousVisitTime
  getScreenCount()I = ScreenCount
  getSyncListener()Lcom/clevertap/android/sdk/SyncListener; = SyncListener
  setSyncListener(Lcom/clevertap/android/sdk/SyncListener;)V = SyncListener
  getTimeElapsed()I = TimeElapsed
  getTotalVisits()I = TotalVisits
  getUnreadInboxMessages()Ljava/util/ArrayList; = UnreadInboxMessages
  getUTMDetails()Lcom/clevertap/android/sdk/UTMDetail; = UTMDetails
  ABExperimentsUpdated()V = ABExperimentsUpdated()
  addMultiValueForKey(Ljava/lang/String;Ljava/lang/String;)V = AddMultiValueForKey(string, string)
  addMultiValuesForKey(Ljava/lang/String;Ljava/util/ArrayList;)V = AddMultiValuesForKey(string, System.Collections.Generic.IList<string>)
  changeCredentials(Ljava/lang/String;Ljava/lang/String;)V = ChangeCredentials(string, string)
  changeCredentials(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = ChangeCredentials(string, string, string)
  createNotification(Landroid/content/Context;Landroid/os/Bundle;)V = CreateNotification(Android.Content.Context, Android.OS.Bundle)
  createNotification(Landroid/content/Context;Landroid/os/Bundle;I)V = CreateNotification(Android.Content.Context, Android.OS.Bundle, int)
  createNotificationChannel(Landroid/content/Context;Ljava/lang/String;Ljava/lang/CharSequence;Ljava/lang/String;IZ)V = CreateNotificationChannel(Android.Content.Context, string, Java.Lang.ICharSequence, string, int, bool)
  createNotificationChannel(Landroid/content/Context;Ljava/lang/String;Ljava/lang/CharSequence;Ljava/lang/String;IZLjava/lang/String;)V = CreateNotificationChannel(Android.Content.Context, string, Java.Lang.ICharSequence, string, int, bool, string)
  createNotificationChannel(Landroid/content/Context;Ljava/lang/String;Ljava/lang/CharSequence;Ljava/lang/String;ILjava/lang/String;Z)V = CreateNotificationChannel(Android.Content.Context, string, Java.Lang.ICharSequence, string, int, string, bool)
  createNotificationChannel(Landroid/content/Context;Ljava/lang/String;Ljava/lang/CharSequence;Ljava/lang/String;ILjava/lang/String;ZLjava/lang/String;)V = CreateNotificationChannel(Android.Content.Context, string, Java.Lang.ICharSequence, string, int, string, bool, string)
  createNotificationChannelGroup(Landroid/content/Context;Ljava/lang/String;Ljava/lang/CharSequence;)V = CreateNotificationChannelGroup(Android.Content.Context, string, Java.Lang.ICharSequence)
  deleteInboxMessage(Lcom/clevertap/android/sdk/CTInboxMessage;)V = DeleteInboxMessage(Com.Clevertap.Android.Sdk.CTInboxMessage)
  deleteNotificationChannel(Landroid/content/Context;Ljava/lang/String;)V = DeleteNotificationChannel(Android.Content.Context, string)
  deleteNotificationChannelGroup(Landroid/content/Context;Ljava/lang/String;)V = DeleteNotificationChannelGroup(Android.Content.Context, string)
  disablePersonalization()V = DisablePersonalization()
  enableDeviceNetworkInfoReporting(Z)V = EnableDeviceNetworkInfoReporting(bool)
  enablePersonalization()V = EnablePersonalization()
  flush()V = Flush()
  getBooleanVariable(Ljava/lang/String;Ljava/lang/Boolean;)Ljava/lang/Boolean; = GetBooleanVariable(string, Java.Lang.Boolean)
  getCount(Ljava/lang/String;)I = GetCount(string)
  getDefaultInstance(Landroid/content/Context;)Lcom/clevertap/android/sdk/CleverTapAPI; = GetDefaultInstance(Android.Content.Context)
  getDefaultInstance(Landroid/content/Context;Ljava/lang/String;)Lcom/clevertap/android/sdk/CleverTapAPI; = GetDefaultInstance(Android.Content.Context, string)
  getDetails(Ljava/lang/String;)Lcom/clevertap/android/sdk/EventDetail; = GetDetails(string)
  getDevicePushToken(Lcom/clevertap/android/sdk/PushType;)Ljava/lang/String; = GetDevicePushToken(Com.Clevertap.Android.Sdk.PushType)
  getDoubleVariable(Ljava/lang/String;Ljava/lang/Double;)Ljava/lang/Double; = GetDoubleVariable(string, Java.Lang.Double)
  getFirstTime(Ljava/lang/String;)I = GetFirstTime(string)
  getInboxMessageForId(Ljava/lang/String;)Lcom/clevertap/android/sdk/CTInboxMessage; = GetInboxMessageForId(string)
  getIntegerVariable(Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer; = GetIntegerVariable(string, Java.Lang.Integer)
  getLastTime(Ljava/lang/String;)I = GetLastTime(string)
  getListOfBooleanVariable(Ljava/lang/String;Ljava/util/List;)Ljava/util/List; = GetListOfBooleanVariable(string, System.Collections.Generic.IList<Java.Lang.Boolean>)
  getListOfDoubleVariable(Ljava/lang/String;Ljava/util/List;)Ljava/util/List; = GetListOfDoubleVariable(string, System.Collections.Generic.IList<Java.Lang.Double>)
  getListOfIntegerVariable(Ljava/lang/String;Ljava/util/List;)Ljava/util/List; = GetListOfIntegerVariable(string, System.Collections.Generic.IList<Java.Lang.Integer>)
  getListOfStringVariable(Ljava/lang/String;Ljava/util/List;)Ljava/util/List; = GetListOfStringVariable(string, System.Collections.Generic.IList<string>)
  getMapOfBooleanVariable(Ljava/lang/String;Ljava/util/Map;)Ljava/util/Map; = GetMapOfBooleanVariable(string, System.Collections.Generic.IDictionary<string, Java.Lang.Boolean>)
  getMapOfDoubleVariable(Ljava/lang/String;Ljava/util/Map;)Ljava/util/Map; = GetMapOfDoubleVariable(string, System.Collections.Generic.IDictionary<string, Java.Lang.Double>)
  getMapOfIntegerVariable(Ljava/lang/String;Ljava/util/Map;)Ljava/util/Map; = GetMapOfIntegerVariable(string, System.Collections.Generic.IDictionary<string, Java.Lang.Integer>)
  getMapOfStringVariable(Ljava/lang/String;Ljava/util/Map;)Ljava/util/Map; = GetMapOfStringVariable(string, System.Collections.Generic.IDictionary<string, string>)
  getNotificationInfo(Landroid/os/Bundle;)Lcom/clevertap/android/sdk/NotificationInfo; = GetNotificationInfo(Android.OS.Bundle)
  getProperty(Ljava/lang/String;)Ljava/lang/Object; = GetProperty(string)
  getStringVariable(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; = GetStringVariable(string, string)
  inAppNotificationDidClick(Landroid/content/Context;Lcom/clevertap/android/sdk/CTInAppNotification;Landroid/os/Bundle;Ljava/util/HashMap;)V = InAppNotificationDidClick(Android.Content.Context, Com.Clevertap.Android.Sdk.CTInAppNotification, Android.OS.Bundle, System.Collections.Generic.IDictionary<string, string>)
  inAppNotificationDidDismiss(Landroid/content/Context;Lcom/clevertap/android/sdk/CTInAppNotification;Landroid/os/Bundle;)V = InAppNotificationDidDismiss(Android.Content.Context, Com.Clevertap.Android.Sdk.CTInAppNotification, Android.OS.Bundle)
  inAppNotificationDidShow(Landroid/content/Context;Lcom/clevertap/android/sdk/CTInAppNotification;Landroid/os/Bundle;)V = InAppNotificationDidShow(Android.Content.Context, Com.Clevertap.Android.Sdk.CTInAppNotification, Android.OS.Bundle)
  initializeInbox()V = InitializeInbox()
  instanceWithConfig(Landroid/content/Context;Lcom/clevertap/android/sdk/CleverTapInstanceConfig;)Lcom/clevertap/android/sdk/CleverTapAPI; = InstanceWithConfig(Android.Content.Context, Com.Clevertap.Android.Sdk.CleverTapInstanceConfig)
  instanceWithConfig(Landroid/content/Context;Lcom/clevertap/android/sdk/CleverTapInstanceConfig;Ljava/lang/String;)Lcom/clevertap/android/sdk/CleverTapAPI; = InstanceWithConfig(Android.Content.Context, Com.Clevertap.Android.Sdk.CleverTapInstanceConfig, string)
  markReadInboxMessage(Lcom/clevertap/android/sdk/CTInboxMessage;)V = MarkReadInboxMessage(Com.Clevertap.Android.Sdk.CTInboxMessage)
  notificationReady(Lcom/clevertap/android/sdk/CTInAppNotification;)V = NotificationReady(Com.Clevertap.Android.Sdk.CTInAppNotification)
  onActivityPaused()V = OnActivityPaused()
  onActivityResumed(Landroid/app/Activity;)V = OnActivityResumed(Android.App.Activity)
  onActivityResumed(Landroid/app/Activity;Ljava/lang/String;)V = OnActivityResumed(Android.App.Activity, string)
  onUserLogin(Ljava/util/Map;)V = OnUserLogin(System.Collections.Generic.IDictionary<string, Java.Lang.Object>)
  onUserLogin(Ljava/util/Map;Ljava/lang/String;)V = OnUserLogin(System.Collections.Generic.IDictionary<string, Java.Lang.Object>, string)
  pushChargedEvent(Ljava/util/HashMap;Ljava/util/ArrayList;)V = PushChargedEvent(System.Collections.Generic.IDictionary<string, Java.Lang.Object>, System.Collections.Generic.IList<System.Collections.Generic.IDictionary<string, Java.Lang.Object>>)
  pushDeepLink(Landroid/net/Uri;)V = PushDeepLink(Android.Net.Uri)
  pushError(Ljava/lang/String;I)V = PushError(string, int)
  pushEvent(Ljava/lang/String;)V = PushEvent(string)
  pushEvent(Ljava/lang/String;Ljava/util/Map;)V = PushEvent(string, System.Collections.Generic.IDictionary<string, Java.Lang.Object>)
  pushFacebookUser(Lorg/json/JSONObject;)V = PushFacebookUser(Org.Json.JSONObject)
  pushFcmRegistrationId(Ljava/lang/String;Z)V = PushFcmRegistrationId(string, bool)
  pushInstallReferrer(Landroid/content/Intent;)V = PushInstallReferrer(Android.Content.Intent)
  pushInstallReferrer(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = PushInstallReferrer(string, string, string)
  pushNotificationClickedEvent(Landroid/os/Bundle;)V = PushNotificationClickedEvent(Android.OS.Bundle)
  pushNotificationViewedEvent(Landroid/os/Bundle;)V = PushNotificationViewedEvent(Android.OS.Bundle)
  pushProfile(Ljava/util/Map;)V = PushProfile(System.Collections.Generic.IDictionary<string, Java.Lang.Object>)
  recordScreen(Ljava/lang/String;)V = RecordScreen(string)
  registerBooleanVariable(Ljava/lang/String;)V = RegisterBooleanVariable(string)
  registerDoubleVariable(Ljava/lang/String;)V = RegisterDoubleVariable(string)
  registerIntegerVariable(Ljava/lang/String;)V = RegisterIntegerVariable(string)
  registerListOfBooleanVariable(Ljava/lang/String;)V = RegisterListOfBooleanVariable(string)
  registerListOfDoubleVariable(Ljava/lang/String;)V = RegisterListOfDoubleVariable(string)
  registerListOfIntegerVariable(Ljava/lang/String;)V = RegisterListOfIntegerVariable(string)
  registerListOfStringVariable(Ljava/lang/String;)V = RegisterListOfStringVariable(string)
  registerMapOfBooleanVariable(Ljava/lang/String;)V = RegisterMapOfBooleanVariable(string)
  registerMapOfDoubleVariable(Ljava/lang/String;)V = RegisterMapOfDoubleVariable(string)
  registerMapOfIntegerVariable(Ljava/lang/String;)V = RegisterMapOfIntegerVariable(string)
  registerMapOfStringVariable(Ljava/lang/String;)V = RegisterMapOfStringVariable(string)
  registerStringVariable(Ljava/lang/String;)V = RegisterStringVariable(string)
  removeMultiValueForKey(Ljava/lang/String;Ljava/lang/String;)V = RemoveMultiValueForKey(string, string)
  removeMultiValuesForKey(Ljava/lang/String;Ljava/util/ArrayList;)V = RemoveMultiValuesForKey(string, System.Collections.Generic.IList<string>)
  removeValueForKey(Ljava/lang/String;)V = RemoveValueForKey(string)
  setAppForeground(Z)V = SetAppForeground(bool)
  setDebugLevel(Lcom/clevertap/android/sdk/CleverTapAPI$LogLevel;)V = SetDebugLevel(Com.Clevertap.Android.Sdk.CleverTapAPI.LogLevel)
  setInAppNotificationButtonListener(Lcom/clevertap/android/sdk/InAppNotificationButtonListener;)V = SetInAppNotificationButtonListener(Com.Clevertap.Android.Sdk.IInAppNotificationButtonListener)
  setInboxMessageButtonListener(Lcom/clevertap/android/sdk/InboxMessageButtonListener;)V = SetInboxMessageButtonListener(Com.Clevertap.Android.Sdk.IInboxMessageButtonListener)
  setLibrary(Ljava/lang/String;)V = SetLibrary(string)
  setMultiValuesForKey(Ljava/lang/String;Ljava/util/ArrayList;)V = SetMultiValuesForKey(string, System.Collections.Generic.IList<string>)
  setOffline(Z)V = SetOffline(bool)
  setOptOut(Z)V = SetOptOut(bool)
  setUIEditorConnectionEnabled(Z)V = SetUIEditorConnectionEnabled(bool)
  showAppInbox()V = ShowAppInbox()
  showAppInbox(Lcom/clevertap/android/sdk/CTInboxStyleConfig;)V = ShowAppInbox(Com.Clevertap.Android.Sdk.CTInboxStyleConfig)
com/clevertap/android/sdk/CleverTapInstanceConfig = Com.Clevertap.Android.Sdk.CleverTapInstanceConfig
  CREATOR = Creator
  getAccountId()Ljava/lang/String; = AccountId
  getAccountRegion()Ljava/lang/String; = AccountRegion
  getAccountToken()Ljava/lang/String; = AccountToken
  isAnalyticsOnly()Z = AnalyticsOnly
  setAnalyticsOnly(Z)V = AnalyticsOnly
  getDebugLevel()I = DebugLevel
  setDebugLevel(I)V = DebugLevel
  getFcmSenderId()Ljava/lang/String; = FcmSenderId
  isABTestingEnabled()Z = IsABTestingEnabled
  isBeta()Z = IsBeta
  isUIEditorEnabled()Z = IsUIEditorEnabled
  getLogger()Lcom/clevertap/android/sdk/Logger; = Logger
  getPackageName()Ljava/lang/String; = PackageName
  createDefaultInstance(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/clevertap/android/sdk/CleverTapInstanceConfig; = CreateDefaultInstance(Android.Content.Context, string, string, string)
  createInstance(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)Lcom/clevertap/android/sdk/CleverTapInstanceConfig; = CreateInstance(Android.Content.Context, string, string)
  createInstance(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/clevertap/android/sdk/CleverTapInstanceConfig; = CreateInstance(Android.Content.Context, string, string, string)
  createInstance(Ljava/lang/String;)Lcom/clevertap/android/sdk/CleverTapInstanceConfig; = CreateInstance(string)
  describeContents()I = DescribeContents()
  enablePersonalization(Z)V = EnablePersonalization(bool)
  setBackgroundSync(Z)V = SetBackgroundSync(bool)
  setDebugLevel(Lcom/clevertap/android/sdk/CleverTapAPI$LogLevel;)V = SetDebugLevel(Com.Clevertap.Android.Sdk.CleverTapAPI.LogLevel)
  setDisableAppLaunchedEvent(Z)V = SetDisableAppLaunchedEvent(bool)
  setEnableCustomCleverTapId(Z)V = SetEnableCustomCleverTapId(bool)
  useGoogleAdId(Z)V = UseGoogleAdId(bool)
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/clevertap/android/sdk/Constants = Com.Clevertap.Android.Sdk.Constants
  <init>()V = .ctor()
com/clevertap/android/sdk/CTBackgroundJobService = Com.Clevertap.Android.Sdk.CTBackgroundJobService
  <init>()V = .ctor()
  onStartJob(Landroid/app/job/JobParameters;)Z = OnStartJob(Android.App.Job.JobParameters)
  onStopJob(Landroid/app/job/JobParameters;)Z = OnStopJob(Android.App.Job.JobParameters)
com/clevertap/android/sdk/CTExperimentsListener = Com.Clevertap.Android.Sdk.ICTExperimentsListener
  CTExperimentsUpdated()V = CTExperimentsUpdated()
com/clevertap/android/sdk/CTInAppBaseFragment = Com.Clevertap.Android.Sdk.CTInAppBaseFragment
  <init>()V = .ctor()
com/clevertap/android/sdk/CTInAppBaseFullFragment = Com.Clevertap.Android.Sdk.CTInAppBaseFullFragment
  <init>()V = .ctor()
com/clevertap/android/sdk/CTInAppBaseFullHtmlFragment = Com.Clevertap.Android.Sdk.CTInAppBaseFullHtmlFragment
  <init>()V = .ctor()
com/clevertap/android/sdk/CTInAppBaseFullNativeFragment = Com.Clevertap.Android.Sdk.CTInAppBaseFullNativeFragment
  <init>()V = .ctor()
com/clevertap/android/sdk/CTInAppBasePartialFragment = Com.Clevertap.Android.Sdk.CTInAppBasePartialFragment
  <init>()V = .ctor()
com/clevertap/android/sdk/CTInAppBasePartialHtmlFragment = Com.Clevertap.Android.Sdk.CTInAppBasePartialHtmlFragment
  <init>()V = .ctor()
  onLongClick(Landroid/view/View;)Z = OnLongClick(Android.Views.View)
  onTouch(Landroid/view/View;Landroid/view/MotionEvent;)Z = OnTouch(Android.Views.View, Android.Views.MotionEvent)
com/clevertap/android/sdk/CTInAppBasePartialNativeFragment = Com.Clevertap.Android.Sdk.CTInAppBasePartialNativeFragment
  <init>()V = .ctor()
  onLongClick(Landroid/view/View;)Z = OnLongClick(Android.Views.View)
  onTouch(Landroid/view/View;Landroid/view/MotionEvent;)Z = OnTouch(Android.Views.View, Android.Views.MotionEvent)
com/clevertap/android/sdk/CTInAppHtmlCoverFragment = Com.Clevertap.Android.Sdk.CTInAppHtmlCoverFragment
  <init>()V = .ctor()
com/clevertap/android/sdk/CTInAppHtmlFooterFragment = Com.Clevertap.Android.Sdk.CTInAppHtmlFooterFragment
  <init>()V = .ctor()
com/clevertap/android/sdk/CTInAppHtmlHalfInterstitialFragment = Com.Clevertap.Android.Sdk.CTInAppHtmlHalfInterstitialFragment
  <init>()V = .ctor()
com/clevertap/android/sdk/CTInAppHtmlHeaderFragment = Com.Clevertap.Android.Sdk.CTInAppHtmlHeaderFragment
  <init>()V = .ctor()
com/clevertap/android/sdk/CTInAppHtmlInterstitialFragment = Com.Clevertap.Android.Sdk.CTInAppHtmlInterstitialFragment
  <init>()V = .ctor()
com/clevertap/android/sdk/CTInAppNativeCoverFragment = Com.Clevertap.Android.Sdk.CTInAppNativeCoverFragment
  <init>()V = .ctor()
com/clevertap/android/sdk/CTInAppNativeCoverImageFragment = Com.Clevertap.Android.Sdk.CTInAppNativeCoverImageFragment
  <init>()V = .ctor()
com/clevertap/android/sdk/CTInAppNativeFooterFragment = Com.Clevertap.Android.Sdk.CTInAppNativeFooterFragment
  <init>()V = .ctor()
com/clevertap/android/sdk/CTInAppNativeHalfInterstitialFragment = Com.Clevertap.Android.Sdk.CTInAppNativeHalfInterstitialFragment
  <init>()V = .ctor()
com/clevertap/android/sdk/CTInAppNativeHalfInterstitialImageFragment = Com.Clevertap.Android.Sdk.CTInAppNativeHalfInterstitialImageFragment
  <init>()V = .ctor()
com/clevertap/android/sdk/CTInAppNativeHeaderFragment = Com.Clevertap.Android.Sdk.CTInAppNativeHeaderFragment
  <init>()V = .ctor()
com/clevertap/android/sdk/CTInAppNativeInterstitialFragment = Com.Clevertap.Android.Sdk.CTInAppNativeInterstitialFragment
  <init>()V = .ctor()
com/clevertap/android/sdk/CTInAppNativeInterstitialImageFragment = Com.Clevertap.Android.Sdk.CTInAppNativeInterstitialImageFragment
  <init>()V = .ctor()
com/clevertap/android/sdk/CTInAppNotification = Com.Clevertap.Android.Sdk.CTInAppNotification
  CREATOR = Creator
  listener = Listener
  getActionExtras()Lorg/json/JSONObject; = ActionExtras
  getInAppType()Ljava/lang/Enum; = InAppType
  describeContents()I = DescribeContents()
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/clevertap/android/sdk/CTInAppNotificationMedia = Com.Clevertap.Android.Sdk.CTInAppNotificationMedia
  CREATOR = Creator
  getOrientation()I = Orientation
  describeContents()I = DescribeContents()
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/clevertap/android/sdk/CTInboxListener = Com.Clevertap.Android.Sdk.ICTInboxListener
  inboxDidInitialize()V = InboxDidInitialize()
  inboxMessagesDidUpdate()V = InboxMessagesDidUpdate()
com/clevertap/android/sdk/CTInboxMessage = Com.Clevertap.Android.Sdk.CTInboxMessage
  CREATOR = Creator
  getActionUrl()Ljava/lang/String; = ActionUrl
  getBgColor()Ljava/lang/String; = BgColor
  getBody()Ljava/lang/String; = Body
  getCampaignId()Ljava/lang/String; = CampaignId
  getCarouselImages()Ljava/util/ArrayList; = CarouselImages
  getCREATOR()Landroid/os/Parcelable$Creator; = CREATOR
  getCustomData()Lorg/json/JSONObject; = CustomData
  getData()Lorg/json/JSONObject; = Data
  getDate()J = Date
  getExpires()J = Expires
  getImageUrl()Ljava/lang/String; = ImageUrl
  getInboxMessageContents()Ljava/util/ArrayList; = InboxMessageContents
  isRead()Z = IsRead
  getMessageId()Ljava/lang/String; = MessageId
  getOrientation()Ljava/lang/String; = Orientation
  getTags()Ljava/util/List; = Tags
  getTitle()Ljava/lang/String; = Title
  getType()Ljava/lang/Enum; = Type
  getWzrkParams()Lorg/json/JSONObject; = WzrkParams
  describeContents()I = DescribeContents()
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/clevertap/android/sdk/CTInboxMessageContent = Com.Clevertap.Android.Sdk.CTInboxMessageContent
  <init>(Landroid/os/Parcel;)V = .ctor(Android.OS.Parcel)
  CREATOR = Creator
  getActionUrl()Ljava/lang/String; = ActionUrl
  getContentType()Ljava/lang/String; = ContentType
  getIcon()Ljava/lang/String; = Icon
  getLinks()Lorg/json/JSONArray; = Links
  getMedia()Ljava/lang/String; = Media
  getMessage()Ljava/lang/String; = Message
  getMessageColor()Ljava/lang/String; = MessageColor
  getPosterUrl()Ljava/lang/String; = PosterUrl
  setPosterUrl(Ljava/lang/String;)V = PosterUrl
  getTitle()Ljava/lang/String; = Title
  getTitleColor()Ljava/lang/String; = TitleColor
  describeContents()I = DescribeContents()
  getLinkBGColor(Lorg/json/JSONObject;)Ljava/lang/String; = GetLinkBGColor(Org.Json.JSONObject)
  getLinkColor(Lorg/json/JSONObject;)Ljava/lang/String; = GetLinkColor(Org.Json.JSONObject)
  getLinkCopyText(Lorg/json/JSONObject;)Ljava/lang/String; = GetLinkCopyText(Org.Json.JSONObject)
  getLinkKeyValue(Lorg/json/JSONObject;)Ljava/util/HashMap; = GetLinkKeyValue(Org.Json.JSONObject)
  getLinkText(Lorg/json/JSONObject;)Ljava/lang/String; = GetLinkText(Org.Json.JSONObject)
  getLinktype(Lorg/json/JSONObject;)Ljava/lang/String; = GetLinktype(Org.Json.JSONObject)
  getLinkUrl(Lorg/json/JSONObject;)Ljava/lang/String; = GetLinkUrl(Org.Json.JSONObject)
  mediaIsAudio()Z = MediaIsAudio()
  mediaIsGIF()Z = MediaIsGIF()
  mediaIsImage()Z = MediaIsImage()
  mediaIsVideo()Z = MediaIsVideo()
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/clevertap/android/sdk/CTInboxStyleConfig = Com.Clevertap.Android.Sdk.CTInboxStyleConfig
  <init>()V = .ctor()
  <init>(Landroid/os/Parcel;)V = .ctor(Android.OS.Parcel)
  CREATOR = Creator
  getBackButtonColor()Ljava/lang/String; = BackButtonColor
  setBackButtonColor(Ljava/lang/String;)V = BackButtonColor
  getInboxBackgroundColor()Ljava/lang/String; = InboxBackgroundColor
  setInboxBackgroundColor(Ljava/lang/String;)V = InboxBackgroundColor
  getNavBarColor()Ljava/lang/String; = NavBarColor
  setNavBarColor(Ljava/lang/String;)V = NavBarColor
  getNavBarTitle()Ljava/lang/String; = NavBarTitle
  setNavBarTitle(Ljava/lang/String;)V = NavBarTitle
  getNavBarTitleColor()Ljava/lang/String; = NavBarTitleColor
  setNavBarTitleColor(Ljava/lang/String;)V = NavBarTitleColor
  getSelectedTabColor()Ljava/lang/String; = SelectedTabColor
  setSelectedTabColor(Ljava/lang/String;)V = SelectedTabColor
  getSelectedTabIndicatorColor()Ljava/lang/String; = SelectedTabIndicatorColor
  setSelectedTabIndicatorColor(Ljava/lang/String;)V = SelectedTabIndicatorColor
  getTabBackgroundColor()Ljava/lang/String; = TabBackgroundColor
  setTabBackgroundColor(Ljava/lang/String;)V = TabBackgroundColor
  getTabs()Ljava/util/ArrayList; = Tabs
  setTabs(Ljava/util/ArrayList;)V = Tabs
  getUnselectedTabColor()Ljava/lang/String; = UnselectedTabColor
  setUnselectedTabColor(Ljava/lang/String;)V = UnselectedTabColor
  describeContents()I = DescribeContents()
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/clevertap/android/sdk/CTPushNotificationReceiver = Com.Clevertap.Android.Sdk.CTPushNotificationReceiver
  <init>()V = .ctor()
  onReceive(Landroid/content/Context;Landroid/content/Intent;)V = OnReceive(Android.Content.Context, Android.Content.Intent)
com/clevertap/android/sdk/CTWebInterface = Com.Clevertap.Android.Sdk.CTWebInterface
  <init>(Lcom/clevertap/android/sdk/CleverTapAPI;)V = .ctor(Com.Clevertap.Android.Sdk.CleverTapAPI)
  addMultiValueForKey(Ljava/lang/String;Ljava/lang/String;)V = AddMultiValueForKey(string, string)
  addMultiValuesForKey(Ljava/lang/String;Ljava/lang/String;)V = AddMultiValuesForKey(string, string)
  pushEvent(Ljava/lang/String;)V = PushEvent(string)
  pushEvent(Ljava/lang/String;Ljava/lang/String;)V = PushEvent(string, string)
  pushProfile(Ljava/lang/String;)V = PushProfile(string)
  removeMultiValueForKey(Ljava/lang/String;Ljava/lang/String;)V = RemoveMultiValueForKey(string, string)
  removeMultiValuesForKey(Ljava/lang/String;Ljava/lang/String;)V = RemoveMultiValuesForKey(string, string)
  removeValueForKey(Ljava/lang/String;)V = RemoveValueForKey(string)
  setMultiValueForKey(Ljava/lang/String;Ljava/lang/String;)V = SetMultiValueForKey(string, string)
com/clevertap/android/sdk/EventDetail = Com.Clevertap.Android.Sdk.EventDetail
  <init>(IIILjava/lang/String;)V = .ctor(int, int, int, string)
  getCount()I = Count
  getFirstTime()I = FirstTime
  getLastTime()I = LastTime
  getName()Ljava/lang/String; = Name
com/clevertap/android/sdk/HorizontalSquareImageView = Com.Clevertap.Android.Sdk.HorizontalSquareImageView
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;I)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet, int)
com/clevertap/android/sdk/ImageCache = Com.Clevertap.Android.Sdk.ImageCache
  <init>()V = .ctor()
  addBitmap(Ljava/lang/String;Landroid/graphics/Bitmap;)Z = AddBitmap(string, Android.Graphics.Bitmap)
  getBitmap(Ljava/lang/String;)Landroid/graphics/Bitmap; = GetBitmap(string)
  getOrFetchBitmap(Ljava/lang/String;)Landroid/graphics/Bitmap; = GetOrFetchBitmap(string)
  init()V = Init()
  initWithPersistence(Landroid/content/Context;)V = InitWithPersistence(Android.Content.Context)
  removeBitmap(Ljava/lang/String;Z)V = RemoveBitmap(string, bool)
com/clevertap/android/sdk/InAppNotificationButtonListener = Com.Clevertap.Android.Sdk.IInAppNotificationButtonListener
  onInAppButtonClick(Ljava/util/HashMap;)V = OnInAppButtonClick(System.Collections.Generic.IDictionary<string, string>)
com/clevertap/android/sdk/InAppNotificationListener = Com.Clevertap.Android.Sdk.IInAppNotificationListener
  beforeShow(Ljava/util/Map;)Z = BeforeShow(System.Collections.Generic.IDictionary<string, Java.Lang.Object>)
  onDismissed(Ljava/util/Map;Ljava/util/Map;)V = OnDismissed(System.Collections.Generic.IDictionary<string, Java.Lang.Object>, System.Collections.Generic.IDictionary<string, Java.Lang.Object>)
com/clevertap/android/sdk/InboxMessageButtonListener = Com.Clevertap.Android.Sdk.IInboxMessageButtonListener
  onInboxButtonClick(Ljava/util/HashMap;)V = OnInboxButtonClick(System.Collections.Generic.IDictionary<string, string>)
com/clevertap/android/sdk/InstallReferrerBroadcastReceiver = Com.Clevertap.Android.Sdk.InstallReferrerBroadcastReceiver
  <init>()V = .ctor()
  onReceive(Landroid/content/Context;Landroid/content/Intent;)V = OnReceive(Android.Content.Context, Android.Content.Intent)
com/clevertap/android/sdk/java_websocket/AbstractWebSocket = Com.Clevertap.Android.Sdk.Java_websocket.AbstractWebSocket
  <init>()V = .ctor()
  getConnectionLostTimeout()I = ConnectionLostTimeout
  setConnectionLostTimeout(I)V = ConnectionLostTimeout
  getConnections()Ljava/util/Collection; = Connections
  isReuseAddr()Z = ReuseAddr
  setReuseAddr(Z)V = ReuseAddr
  isTcpNoDelay()Z = TcpNoDelay
  setTcpNoDelay(Z)V = TcpNoDelay
  startConnectionLostTimer()V = StartConnectionLostTimer()
  stopConnectionLostTimer()V = StopConnectionLostTimer()
com/clevertap/android/sdk/java_websocket/client/WebSocketClient = Com.Clevertap.Android.Sdk.Java_websocket.Client.WebSocketClient
  <init>(Ljava/net/URI;)V = .ctor(Java.Net.URI)
  <init>(Ljava/net/URI;Lcom/clevertap/android/sdk/java_websocket/drafts/Draft;)V = .ctor(Java.Net.URI, Com.Clevertap.Android.Sdk.Java_websocket.Drafts.Draft)
  <init>(Ljava/net/URI;Lcom/clevertap/android/sdk/java_websocket/drafts/Draft;Ljava/util/Map;)V = .ctor(Java.Net.URI, Com.Clevertap.Android.Sdk.Java_websocket.Drafts.Draft, System.Collections.Generic.IDictionary<string, string>)
  <init>(Ljava/net/URI;Lcom/clevertap/android/sdk/java_websocket/drafts/Draft;Ljava/util/Map;I)V = .ctor(Java.Net.URI, Com.Clevertap.Android.Sdk.Java_websocket.Drafts.Draft, System.Collections.Generic.IDictionary<string, string>, int)
  <init>(Ljava/net/URI;Ljava/util/Map;)V = .ctor(Java.Net.URI, System.Collections.Generic.IDictionary<string, string>)
  uri = Uri
  getAttachment()Ljava/lang/Object; = Attachment
  setAttachment(Ljava/lang/Object;)V = Attachment
  getConnection()Lcom/clevertap/android/sdk/java_websocket/WebSocket; = Connection
  getConnections()Ljava/util/Collection; = Connections
  getDraft()Lcom/clevertap/android/sdk/java_websocket/drafts/Draft; = Draft
  hasBufferedData()Z = HasBufferedData
  isClosed()Z = IsClosed
  isClosing()Z = IsClosing
  isFlushAndClose()Z = IsFlushAndClose
  isOpen()Z = IsOpen
  getLocalSocketAddress()Ljava/net/InetSocketAddress; = LocalSocketAddress
  getReadyState()Lcom/clevertap/android/sdk/java_websocket/enums/ReadyState; = ReadyState
  getRemoteSocketAddress()Ljava/net/InetSocketAddress; = RemoteSocketAddress
  getResourceDescriptor()Ljava/lang/String; = ResourceDescriptor
  getSocket()Ljava/net/Socket; = Socket
  setSocket(Ljava/net/Socket;)V = Socket
  getURI()Ljava/net/URI; = URI
  close()V = Close()
  close(I)V = Close(int)
  close(ILjava/lang/String;)V = Close(int, string)
  closeBlocking()V = CloseBlocking()
  closeConnection(ILjava/lang/String;)V = CloseConnection(int, string)
  connect()V = Connect()
  connectBlocking()Z = ConnectBlocking()
  connectBlocking(JLjava/util/concurrent/TimeUnit;)Z = ConnectBlocking(long, Java.Util.Concurrent.TimeUnit)
  getLocalSocketAddress(Lcom/clevertap/android/sdk/java_websocket/WebSocket;)Ljava/net/InetSocketAddress; = GetLocalSocketAddress(Com.Clevertap.Android.Sdk.Java_websocket.IWebSocket)
  getRemoteSocketAddress(Lcom/clevertap/android/sdk/java_websocket/WebSocket;)Ljava/net/InetSocketAddress; = GetRemoteSocketAddress(Com.Clevertap.Android.Sdk.Java_websocket.IWebSocket)
  onClose(ILjava/lang/String;Z)V = OnClose(int, string, bool)
  onCloseInitiated(ILjava/lang/String;)V = OnCloseInitiated(int, string)
  onClosing(ILjava/lang/String;Z)V = OnClosing(int, string, bool)
  onError(Ljava/lang/Exception;)V = OnError(Java.Lang.Exception)
  onMessage(Ljava/lang/String;)V = OnMessage(string)
  onMessage(Ljava/nio/ByteBuffer;)V = OnMessage(Java.Nio.ByteBuffer)
  onOpen(Lcom/clevertap/android/sdk/java_websocket/handshake/ServerHandshake;)V = OnOpen(Com.Clevertap.Android.Sdk.Java_websocket.Handshake.IServerHandshake)
  onWebsocketClose(Lcom/clevertap/android/sdk/java_websocket/WebSocket;ILjava/lang/String;Z)V = OnWebsocketClose(Com.Clevertap.Android.Sdk.Java_websocket.IWebSocket, int, string, bool)
  onWebsocketCloseInitiated(Lcom/clevertap/android/sdk/java_websocket/WebSocket;ILjava/lang/String;)V = OnWebsocketCloseInitiated(Com.Clevertap.Android.Sdk.Java_websocket.IWebSocket, int, string)
  onWebsocketClosing(Lcom/clevertap/android/sdk/java_websocket/WebSocket;ILjava/lang/String;Z)V = OnWebsocketClosing(Com.Clevertap.Android.Sdk.Java_websocket.IWebSocket, int, string, bool)
  onWebsocketError(Lcom/clevertap/android/sdk/java_websocket/WebSocket;Ljava/lang/Exception;)V = OnWebsocketError(Com.Clevertap.Android.Sdk.Java_websocket.IWebSocket, Java.Lang.Exception)
  onWebsocketMessage(Lcom/clevertap/android/sdk/java_websocket/WebSocket;Ljava/lang/String;)V = OnWebsocketMessage(Com.Clevertap.Android.Sdk.Java_websocket.IWebSocket, string)
  onWebsocketMessageBuffer(Lcom/clevertap/android/sdk/java_websocket/WebSocket;Ljava/nio/ByteBuffer;)V = OnWebsocketMessageBuffer(Com.Clevertap.Android.Sdk.Java_websocket.IWebSocket, Java.Nio.ByteBuffer)
  onWebsocketOpen(Lcom/clevertap/android/sdk/java_websocket/WebSocket;Lcom/clevertap/android/sdk/java_websocket/handshake/Handshakedata;)V = OnWebsocketOpen(Com.Clevertap.Android.Sdk.Java_websocket.IWebSocket, Com.Clevertap.Android.Sdk.Java_websocket.Handshake.IHandshakedata)
  onWriteDemand(Lcom/clevertap/android/sdk/java_websocket/WebSocket;)V = OnWriteDemand(Com.Clevertap.Android.Sdk.Java_websocket.IWebSocket)
  reconnect()V = Reconnect()
  reconnectBlocking()Z = ReconnectBlocking()
  run()V = Run()
  send([B)V = Send(byte[])
  send(Ljava/lang/String;)V = Send(string)
  send(Ljava/nio/ByteBuffer;)V = Send(Java.Nio.ByteBuffer)
  sendFragmentedFrame(Lcom/clevertap/android/sdk/java_websocket/enums/Opcode;Ljava/nio/ByteBuffer;Z)V = SendFragmentedFrame(Com.Clevertap.Android.Sdk.Java_websocket.Enums.Opcode, Java.Nio.ByteBuffer, bool)
  sendFrame(Lcom/clevertap/android/sdk/java_websocket/framing/Framedata;)V = SendFrame(Com.Clevertap.Android.Sdk.Java_websocket.Framing.IFramedata)
  sendFrame(Ljava/util/Collection;)V = SendFrame(System.Collections.Generic.ICollection<Com.Clevertap.Android.Sdk.Java_websocket.Framing.IFramedata>)
  sendPing()V = SendPing()
  setProxy(Ljava/net/Proxy;)V = SetProxy(Java.Net.Proxy)
  setSocketFactory(Ljavax/net/SocketFactory;)V = SetSocketFactory(Javax.Net.SocketFactory)
com/clevertap/android/sdk/java_websocket/drafts/Draft = Com.Clevertap.Android.Sdk.Java_websocket.Drafts.Draft
  <init>()V = .ctor()
  continuousFrameType = ContinuousFrameType
  role = Role
  getCloseHandshakeType()Lcom/clevertap/android/sdk/java_websocket/enums/CloseHandshakeType; = CloseHandshakeType
  getRole()Lcom/clevertap/android/sdk/java_websocket/enums/Role; = Role
  acceptHandshakeAsClient(Lcom/clevertap/android/sdk/java_websocket/handshake/ClientHandshake;Lcom/clevertap/android/sdk/java_websocket/handshake/ServerHandshake;)Lcom/clevertap/android/sdk/java_websocket/enums/HandshakeState; = AcceptHandshakeAsClient(Com.Clevertap.Android.Sdk.Java_websocket.Handshake.IClientHandshake, Com.Clevertap.Android.Sdk.Java_websocket.Handshake.IServerHandshake)
  acceptHandshakeAsServer(Lcom/clevertap/android/sdk/java_websocket/handshake/ClientHandshake;)Lcom/clevertap/android/sdk/java_websocket/enums/HandshakeState; = AcceptHandshakeAsServer(Com.Clevertap.Android.Sdk.Java_websocket.Handshake.IClientHandshake)
  basicAccept(Lcom/clevertap/android/sdk/java_websocket/handshake/Handshakedata;)Z = BasicAccept(Com.Clevertap.Android.Sdk.Java_websocket.Handshake.IHandshakedata)
  checkAlloc(I)I = CheckAlloc(int)
  continuousFrame(Lcom/clevertap/android/sdk/java_websocket/enums/Opcode;Ljava/nio/ByteBuffer;Z)Ljava/util/List; = ContinuousFrame(Com.Clevertap.Android.Sdk.Java_websocket.Enums.Opcode, Java.Nio.ByteBuffer, bool)
  copyInstance()Lcom/clevertap/android/sdk/java_websocket/drafts/Draft; = CopyInstance()
  createBinaryFrame(Lcom/clevertap/android/sdk/java_websocket/framing/Framedata;)Ljava/nio/ByteBuffer; = CreateBinaryFrame(Com.Clevertap.Android.Sdk.Java_websocket.Framing.IFramedata)
  createFrames(Ljava/lang/String;Z)Ljava/util/List; = CreateFrames(string, bool)
  createFrames(Ljava/nio/ByteBuffer;Z)Ljava/util/List; = CreateFrames(Java.Nio.ByteBuffer, bool)
  createHandshake(Lcom/clevertap/android/sdk/java_websocket/handshake/Handshakedata;)Ljava/util/List; = CreateHandshake(Com.Clevertap.Android.Sdk.Java_websocket.Handshake.IHandshakedata)
  createHandshake(Lcom/clevertap/android/sdk/java_websocket/handshake/Handshakedata;Z)Ljava/util/List; = CreateHandshake(Com.Clevertap.Android.Sdk.Java_websocket.Handshake.IHandshakedata, bool)
  createHandshake(Lcom/clevertap/android/sdk/java_websocket/handshake/Handshakedata;Lcom/clevertap/android/sdk/java_websocket/enums/Role;)Ljava/util/List; = CreateHandshake(Com.Clevertap.Android.Sdk.Java_websocket.Handshake.IHandshakedata, Com.Clevertap.Android.Sdk.Java_websocket.Enums.Role)
  createHandshake(Lcom/clevertap/android/sdk/java_websocket/handshake/Handshakedata;Lcom/clevertap/android/sdk/java_websocket/enums/Role;Z)Ljava/util/List; = CreateHandshake(Com.Clevertap.Android.Sdk.Java_websocket.Handshake.IHandshakedata, Com.Clevertap.Android.Sdk.Java_websocket.Enums.Role, bool)
  postProcessHandshakeRequestAsClient(Lcom/clevertap/android/sdk/java_websocket/handshake/ClientHandshakeBuilder;)Lcom/clevertap/android/sdk/java_websocket/handshake/ClientHandshakeBuilder; = PostProcessHandshakeRequestAsClient(Com.Clevertap.Android.Sdk.Java_websocket.Handshake.IClientHandshakeBuilder)
  postProcessHandshakeResponseAsServer(Lcom/clevertap/android/sdk/java_websocket/handshake/ClientHandshake;Lcom/clevertap/android/sdk/java_websocket/handshake/ServerHandshakeBuilder;)Lcom/clevertap/android/sdk/java_websocket/handshake/HandshakeBuilder; = PostProcessHandshakeResponseAsServer(Com.Clevertap.Android.Sdk.Java_websocket.Handshake.IClientHandshake, Com.Clevertap.Android.Sdk.Java_websocket.Handshake.IServerHandshakeBuilder)
  processFrame(Lcom/clevertap/android/sdk/java_websocket/WebSocketImpl;Lcom/clevertap/android/sdk/java_websocket/framing/Framedata;)V = ProcessFrame(Com.Clevertap.Android.Sdk.Java_websocket.WebSocketImpl, Com.Clevertap.Android.Sdk.Java_websocket.Framing.IFramedata)
  readLine(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer; = ReadLine(Java.Nio.ByteBuffer)
  readStringLine(Ljava/nio/ByteBuffer;)Ljava/lang/String; = ReadStringLine(Java.Nio.ByteBuffer)
  reset()V = Reset()
  setParseMode(Lcom/clevertap/android/sdk/java_websocket/enums/Role;)V = SetParseMode(Com.Clevertap.Android.Sdk.Java_websocket.Enums.Role)
  translateFrame(Ljava/nio/ByteBuffer;)Ljava/util/List; = TranslateFrame(Java.Nio.ByteBuffer)
  translateHandshake(Ljava/nio/ByteBuffer;)Lcom/clevertap/android/sdk/java_websocket/handshake/Handshakedata; = TranslateHandshake(Java.Nio.ByteBuffer)
  translateHandshakeHttp(Ljava/nio/ByteBuffer;Lcom/clevertap/android/sdk/java_websocket/enums/Role;)Lcom/clevertap/android/sdk/java_websocket/handshake/HandshakeBuilder; = TranslateHandshakeHttp(Java.Nio.ByteBuffer, Com.Clevertap.Android.Sdk.Java_websocket.Enums.Role)
com/clevertap/android/sdk/java_websocket/drafts/Draft_6455 = Com.Clevertap.Android.Sdk.Java_websocket.Drafts.Draft_6455
  <init>()V = .ctor()
  <init>(Lcom/clevertap/android/sdk/java_websocket/extensions/IExtension;)V = .ctor(Com.Clevertap.Android.Sdk.Java_websocket.Extensions.IExtension)
  <init>(Ljava/util/List;)V = .ctor(System.Collections.Generic.IList<Com.Clevertap.Android.Sdk.Java_websocket.Extensions.IExtension>)
  <init>(Ljava/util/List;I)V = .ctor(System.Collections.Generic.IList<Com.Clevertap.Android.Sdk.Java_websocket.Extensions.IExtension>, int)
  <init>(Ljava/util/List;Ljava/util/List;)V = .ctor(System.Collections.Generic.IList<Com.Clevertap.Android.Sdk.Java_websocket.Extensions.IExtension>, System.Collections.Generic.IList<Com.Clevertap.Android.Sdk.Java_websocket.Protocols.IProtocol>)
  <init>(Ljava/util/List;Ljava/util/List;I)V = .ctor(System.Collections.Generic.IList<Com.Clevertap.Android.Sdk.Java_websocket.Extensions.IExtension>, System.Collections.Generic.IList<Com.Clevertap.Android.Sdk.Java_websocket.Protocols.IProtocol>, int)
  getCloseHandshakeType()Lcom/clevertap/android/sdk/java_websocket/enums/CloseHandshakeType; = CloseHandshakeType
  getExtension()Lcom/clevertap/android/sdk/java_websocket/extensions/IExtension; = Extension
  getKnownExtensions()Ljava/util/List; = KnownExtensions
  getKnownProtocols()Ljava/util/List; = KnownProtocols
  getMaxFrameSize()I = MaxFrameSize
  getProtocol()Lcom/clevertap/android/sdk/java_websocket/protocols/IProtocol; = Protocol
  acceptHandshakeAsClient(Lcom/clevertap/android/sdk/java_websocket/handshake/ClientHandshake;Lcom/clevertap/android/sdk/java_websocket/handshake/ServerHandshake;)Lcom/clevertap/android/sdk/java_websocket/enums/HandshakeState; = AcceptHandshakeAsClient(Com.Clevertap.Android.Sdk.Java_websocket.Handshake.IClientHandshake, Com.Clevertap.Android.Sdk.Java_websocket.Handshake.IServerHandshake)
  acceptHandshakeAsServer(Lcom/clevertap/android/sdk/java_websocket/handshake/ClientHandshake;)Lcom/clevertap/android/sdk/java_websocket/enums/HandshakeState; = AcceptHandshakeAsServer(Com.Clevertap.Android.Sdk.Java_websocket.Handshake.IClientHandshake)
  copyInstance()Lcom/clevertap/android/sdk/java_websocket/drafts/Draft; = CopyInstance()
  createBinaryFrame(Lcom/clevertap/android/sdk/java_websocket/framing/Framedata;)Ljava/nio/ByteBuffer; = CreateBinaryFrame(Com.Clevertap.Android.Sdk.Java_websocket.Framing.IFramedata)
  createFrames(Ljava/lang/String;Z)Ljava/util/List; = CreateFrames(string, bool)
  createFrames(Ljava/nio/ByteBuffer;Z)Ljava/util/List; = CreateFrames(Java.Nio.ByteBuffer, bool)
  postProcessHandshakeRequestAsClient(Lcom/clevertap/android/sdk/java_websocket/handshake/ClientHandshakeBuilder;)Lcom/clevertap/android/sdk/java_websocket/handshake/ClientHandshakeBuilder; = PostProcessHandshakeRequestAsClient(Com.Clevertap.Android.Sdk.Java_websocket.Handshake.IClientHandshakeBuilder)
  postProcessHandshakeResponseAsServer(Lcom/clevertap/android/sdk/java_websocket/handshake/ClientHandshake;Lcom/clevertap/android/sdk/java_websocket/handshake/ServerHandshakeBuilder;)Lcom/clevertap/android/sdk/java_websocket/handshake/HandshakeBuilder; = PostProcessHandshakeResponseAsServer(Com.Clevertap.Android.Sdk.Java_websocket.Handshake.IClientHandshake, Com.Clevertap.Android.Sdk.Java_websocket.Handshake.IServerHandshakeBuilder)
  processFrame(Lcom/clevertap/android/sdk/java_websocket/WebSocketImpl;Lcom/clevertap/android/sdk/java_websocket/framing/Framedata;)V = ProcessFrame(Com.Clevertap.Android.Sdk.Java_websocket.WebSocketImpl, Com.Clevertap.Android.Sdk.Java_websocket.Framing.IFramedata)
  reset()V = Reset()
  translateFrame(Ljava/nio/ByteBuffer;)Ljava/util/List; = TranslateFrame(Java.Nio.ByteBuffer)
com/clevertap/android/sdk/java_websocket/enums/CloseHandshakeType = Com.Clevertap.Android.Sdk.Java_websocket.Enums.CloseHandshakeType
  NONE = None
  ONEWAY = Oneway
  TWOWAY = Twoway
  valueOf(Ljava/lang/String;)Lcom/clevertap/android/sdk/java_websocket/enums/CloseHandshakeType; = ValueOf(string)
  values()[Lcom/clevertap/android/sdk/java_websocket/enums/CloseHandshakeType; = Values()
com/clevertap/android/sdk/java_websocket/enums/HandshakeState = Com.Clevertap.Android.Sdk.Java_websocket.Enums.HandshakeState
  MATCHED = Matched
  NOT_MATCHED = NotMatched
  valueOf(Ljava/lang/String;)Lcom/clevertap/android/sdk/java_websocket/enums/HandshakeState; = ValueOf(string)
  values()[Lcom/clevertap/android/sdk/java_websocket/enums/HandshakeState; = Values()
com/clevertap/android/sdk/java_websocket/enums/Opcode = Com.Clevertap.Android.Sdk.Java_websocket.Enums.Opcode
  BINARY = Binary
  CLOSING = Closing
  CONTINUOUS = Continuous
  PING = Ping
  PONG = Pong
  TEXT = Text
  valueOf(Ljava/lang/String;)Lcom/clevertap/android/sdk/java_websocket/enums/Opcode; = ValueOf(string)
  values()[Lcom/clevertap/android/sdk/java_websocket/enums/Opcode; = Values()
com/clevertap/android/sdk/java_websocket/enums/ReadyState = Com.Clevertap.Android.Sdk.Java_websocket.Enums.ReadyState
  CLOSED = Closed
  CLOSING = Closing
  NOT_YET_CONNECTED = NotYetConnected
  OPEN = Open
  valueOf(Ljava/lang/String;)Lcom/clevertap/android/sdk/java_websocket/enums/ReadyState; = ValueOf(string)
  values()[Lcom/clevertap/android/sdk/java_websocket/enums/ReadyState; = Values()
com/clevertap/android/sdk/java_websocket/enums/Role = Com.Clevertap.Android.Sdk.Java_websocket.Enums.Role
  CLIENT = Client
  SERVER = Server
  valueOf(Ljava/lang/String;)Lcom/clevertap/android/sdk/java_websocket/enums/Role; = ValueOf(string)
  values()[Lcom/clevertap/android/sdk/java_websocket/enums/Role; = Values()
com/clevertap/android/sdk/java_websocket/exceptions/IncompleteException = Com.Clevertap.Android.Sdk.Java_websocket.Exceptions.IncompleteException
  <init>(I)V = .ctor(int)
  getPreferredSize()I = PreferredSize
com/clevertap/android/sdk/java_websocket/exceptions/IncompleteHandshakeException = Com.Clevertap.Android.Sdk.Java_websocket.Exceptions.IncompleteHandshakeException
  <init>()V = .ctor()
  <init>(I)V = .ctor(int)
  getPreferredSize()I = PreferredSize
com/clevertap/android/sdk/java_websocket/exceptions/InvalidDataException = Com.Clevertap.Android.Sdk.Java_websocket.Exceptions.InvalidDataException
  <init>(I)V = .ctor(int)
  <init>(ILjava/lang/String;)V = .ctor(int, string)
  <init>(ILjava/lang/String;Ljava/lang/Throwable;)V = .ctor(int, string, Java.Lang.Throwable)
  <init>(ILjava/lang/Throwable;)V = .ctor(int, Java.Lang.Throwable)
  getCloseCode()I = CloseCode
com/clevertap/android/sdk/java_websocket/exceptions/InvalidEncodingException = Com.Clevertap.Android.Sdk.Java_websocket.Exceptions.InvalidEncodingException
  <init>(Ljava/io/UnsupportedEncodingException;)V = .ctor(Java.IO.UnsupportedEncodingException)
  getEncodingException()Ljava/io/UnsupportedEncodingException; = EncodingException
com/clevertap/android/sdk/java_websocket/exceptions/InvalidFrameException = Com.Clevertap.Android.Sdk.Java_websocket.Exceptions.InvalidFrameException
  <init>()V = .ctor()
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
  <init>(Ljava/lang/Throwable;)V = .ctor(Java.Lang.Throwable)
com/clevertap/android/sdk/java_websocket/exceptions/InvalidHandshakeException = Com.Clevertap.Android.Sdk.Java_websocket.Exceptions.InvalidHandshakeException
  <init>()V = .ctor()
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
  <init>(Ljava/lang/Throwable;)V = .ctor(Java.Lang.Throwable)
com/clevertap/android/sdk/java_websocket/exceptions/LimitExceededException = Com.Clevertap.Android.Sdk.Java_websocket.Exceptions.LimitExceededException
  <init>()V = .ctor()
  <init>(I)V = .ctor(int)
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;I)V = .ctor(string, int)
  getLimit()I = Limit
com/clevertap/android/sdk/java_websocket/exceptions/NotSendableException = Com.Clevertap.Android.Sdk.Java_websocket.Exceptions.NotSendableException
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
  <init>(Ljava/lang/Throwable;)V = .ctor(Java.Lang.Throwable)
com/clevertap/android/sdk/java_websocket/exceptions/WebsocketNotConnectedException = Com.Clevertap.Android.Sdk.Java_websocket.Exceptions.WebsocketNotConnectedException
  <init>()V = .ctor()
com/clevertap/android/sdk/java_websocket/extensions/CompressionExtension = Com.Clevertap.Android.Sdk.Java_websocket.Extensions.CompressionExtension
  <init>()V = .ctor()
com/clevertap/android/sdk/java_websocket/extensions/DefaultExtension = Com.Clevertap.Android.Sdk.Java_websocket.Extensions.DefaultExtension
  <init>()V = .ctor()
  getProvidedExtensionAsClient()Ljava/lang/String; = ProvidedExtensionAsClient
  getProvidedExtensionAsServer()Ljava/lang/String; = ProvidedExtensionAsServer
  acceptProvidedExtensionAsClient(Ljava/lang/String;)Z = AcceptProvidedExtensionAsClient(string)
  acceptProvidedExtensionAsServer(Ljava/lang/String;)Z = AcceptProvidedExtensionAsServer(string)
  copyInstance()Lcom/clevertap/android/sdk/java_websocket/extensions/IExtension; = CopyInstance()
  decodeFrame(Lcom/clevertap/android/sdk/java_websocket/framing/Framedata;)V = DecodeFrame(Com.Clevertap.Android.Sdk.Java_websocket.Framing.IFramedata)
  encodeFrame(Lcom/clevertap/android/sdk/java_websocket/framing/Framedata;)V = EncodeFrame(Com.Clevertap.Android.Sdk.Java_websocket.Framing.IFramedata)
  isFrameValid(Lcom/clevertap/android/sdk/java_websocket/framing/Framedata;)V = IsFrameValid(Com.Clevertap.Android.Sdk.Java_websocket.Framing.IFramedata)
  reset()V = Reset()
com/clevertap/android/sdk/java_websocket/extensions/IExtension = Com.Clevertap.Android.Sdk.Java_websocket.Extensions.IExtension
  getProvidedExtensionAsClient()Ljava/lang/String; = ProvidedExtensionAsClient
  getProvidedExtensionAsServer()Ljava/lang/String; = ProvidedExtensionAsServer
  acceptProvidedExtensionAsClient(Ljava/lang/String;)Z = AcceptProvidedExtensionAsClient(string)
  acceptProvidedExtensionAsServer(Ljava/lang/String;)Z = AcceptProvidedExtensionAsServer(string)
  copyInstance()Lcom/clevertap/android/sdk/java_websocket/extensions/IExtension; = CopyInstance()
  decodeFrame(Lcom/clevertap/android/sdk/java_websocket/framing/Framedata;)V = DecodeFrame(Com.Clevertap.Android.Sdk.Java_websocket.Framing.IFramedata)
  encodeFrame(Lcom/clevertap/android/sdk/java_websocket/framing/Framedata;)V = EncodeFrame(Com.Clevertap.Android.Sdk.Java_websocket.Framing.IFramedata)
  isFrameValid(Lcom/clevertap/android/sdk/java_websocket/framing/Framedata;)V = IsFrameValid(Com.Clevertap.Android.Sdk.Java_websocket.Framing.IFramedata)
  reset()V = Reset()
  toString()Ljava/lang/String; = ToString()
com/clevertap/android/sdk/java_websocket/framing/BinaryFrame = Com.Clevertap.Android.Sdk.Java_websocket.Framing.BinaryFrame
  <init>()V = .ctor()
com/clevertap/android/sdk/java_websocket/framing/CloseFrame = Com.Clevertap.Android.Sdk.Java_websocket.Framing.CloseFrame
  <init>()V = .ctor()
  ABNORMAL_CLOSE = AbnormalClose
  BAD_GATEWAY = BadGateway
  BUGGYCLOSE = Buggyclose
  EXTENSION = Extension
  FLASHPOLICY = Flashpolicy
  GOING_AWAY = GoingAway
  NEVER_CONNECTED = NeverConnected
  NOCODE = Nocode
  NORMAL = Normal
  NO_UTF8 = NoUtf8
  POLICY_VALIDATION = PolicyValidation
  PROTOCOL_ERROR = ProtocolError
  REFUSE = Refuse
  SERVICE_RESTART = ServiceRestart
  TLS_ERROR = TlsError
  TOOBIG = Toobig
  TRY_AGAIN_LATER = TryAgainLater
  UNEXPECTED_CONDITION = UnexpectedCondition
  getCloseCode()I = CloseCode
  getMessage()Ljava/lang/String; = Message
  setCode(I)V = SetCode(int)
  setReason(Ljava/lang/String;)V = SetReason(string)
com/clevertap/android/sdk/java_websocket/framing/ContinuousFrame = Com.Clevertap.Android.Sdk.Java_websocket.Framing.ContinuousFrame
  <init>()V = .ctor()
com/clevertap/android/sdk/java_websocket/framing/ControlFrame = Com.Clevertap.Android.Sdk.Java_websocket.Framing.ControlFrame
  <init>(Lcom/clevertap/android/sdk/java_websocket/enums/Opcode;)V = .ctor(Com.Clevertap.Android.Sdk.Java_websocket.Enums.Opcode)
  isValid()V = IsValid()
com/clevertap/android/sdk/java_websocket/framing/DataFrame = Com.Clevertap.Android.Sdk.Java_websocket.Framing.DataFrame
  <init>(Lcom/clevertap/android/sdk/java_websocket/enums/Opcode;)V = .ctor(Com.Clevertap.Android.Sdk.Java_websocket.Enums.Opcode)
  isValid()V = IsValid()
com/clevertap/android/sdk/java_websocket/framing/Framedata = Com.Clevertap.Android.Sdk.Java_websocket.Framing.IFramedata
  isFin()Z = IsFin
  isRSV1()Z = IsRSV1
  isRSV2()Z = IsRSV2
  isRSV3()Z = IsRSV3
  getOpcode()Lcom/clevertap/android/sdk/java_websocket/enums/Opcode; = Opcode
  getPayloadData()Ljava/nio/ByteBuffer; = PayloadData
  getTransfereMasked()Z = TransfereMasked
  append(Lcom/clevertap/android/sdk/java_websocket/framing/Framedata;)V = Append(Com.Clevertap.Android.Sdk.Java_websocket.Framing.IFramedata)
com/clevertap/android/sdk/java_websocket/framing/FramedataImpl1 = Com.Clevertap.Android.Sdk.Java_websocket.Framing.FramedataImpl1
  <init>(Lcom/clevertap/android/sdk/java_websocket/enums/Opcode;)V = .ctor(Com.Clevertap.Android.Sdk.Java_websocket.Enums.Opcode)
  isFin()Z = IsFin
  isRSV1()Z = IsRSV1
  isRSV2()Z = IsRSV2
  isRSV3()Z = IsRSV3
  getOpcode()Lcom/clevertap/android/sdk/java_websocket/enums/Opcode; = Opcode
  getPayloadData()Ljava/nio/ByteBuffer; = PayloadData
  getTransfereMasked()Z = TransfereMasked
  append(Lcom/clevertap/android/sdk/java_websocket/framing/Framedata;)V = Append(Com.Clevertap.Android.Sdk.Java_websocket.Framing.IFramedata)
  get(Lcom/clevertap/android/sdk/java_websocket/enums/Opcode;)Lcom/clevertap/android/sdk/java_websocket/framing/FramedataImpl1; = Get(Com.Clevertap.Android.Sdk.Java_websocket.Enums.Opcode)
  isValid()V = IsValid()
  setFin(Z)V = SetFin(bool)
  setPayload(Ljava/nio/ByteBuffer;)V = SetPayload(Java.Nio.ByteBuffer)
  setRSV1(Z)V = SetRSV1(bool)
  setRSV2(Z)V = SetRSV2(bool)
  setRSV3(Z)V = SetRSV3(bool)
  setTransferemasked(Z)V = SetTransferemasked(bool)
com/clevertap/android/sdk/java_websocket/framing/PingFrame = Com.Clevertap.Android.Sdk.Java_websocket.Framing.PingFrame
  <init>()V = .ctor()
com/clevertap/android/sdk/java_websocket/framing/PongFrame = Com.Clevertap.Android.Sdk.Java_websocket.Framing.PongFrame
  <init>()V = .ctor()
  <init>(Lcom/clevertap/android/sdk/java_websocket/framing/PingFrame;)V = .ctor(Com.Clevertap.Android.Sdk.Java_websocket.Framing.PingFrame)
com/clevertap/android/sdk/java_websocket/framing/TextFrame = Com.Clevertap.Android.Sdk.Java_websocket.Framing.TextFrame
  <init>()V = .ctor()
com/clevertap/android/sdk/java_websocket/handshake/ClientHandshake = Com.Clevertap.Android.Sdk.Java_websocket.Handshake.IClientHandshake
  getResourceDescriptor()Ljava/lang/String; = GetResourceDescriptor()
com/clevertap/android/sdk/java_websocket/handshake/ClientHandshakeBuilder = Com.Clevertap.Android.Sdk.Java_websocket.Handshake.IClientHandshakeBuilder
  setResourceDescriptor(Ljava/lang/String;)V = SetResourceDescriptor(string)
com/clevertap/android/sdk/java_websocket/handshake/HandshakeBuilder = Com.Clevertap.Android.Sdk.Java_websocket.Handshake.IHandshakeBuilder
  put(Ljava/lang/String;Ljava/lang/String;)V = Put(string, string)
  setContent([B)V = SetContent(byte[])
com/clevertap/android/sdk/java_websocket/handshake/Handshakedata = Com.Clevertap.Android.Sdk.Java_websocket.Handshake.IHandshakedata
  getContent()[B = GetContent()
  getFieldValue(Ljava/lang/String;)Ljava/lang/String; = GetFieldValue(string)
  hasFieldValue(Ljava/lang/String;)Z = HasFieldValue(string)
  iterateHttpFields()Ljava/util/Iterator; = IterateHttpFields()
com/clevertap/android/sdk/java_websocket/handshake/HandshakedataImpl1 = Com.Clevertap.Android.Sdk.Java_websocket.Handshake.HandshakedataImpl1
  <init>()V = .ctor()
  getContent()[B = GetContent()
  getFieldValue(Ljava/lang/String;)Ljava/lang/String; = GetFieldValue(string)
  hasFieldValue(Ljava/lang/String;)Z = HasFieldValue(string)
  iterateHttpFields()Ljava/util/Iterator; = IterateHttpFields()
  put(Ljava/lang/String;Ljava/lang/String;)V = Put(string, string)
  setContent([B)V = SetContent(byte[])
com/clevertap/android/sdk/java_websocket/handshake/HandshakeImpl1Client = Com.Clevertap.Android.Sdk.Java_websocket.Handshake.HandshakeImpl1Client
  <init>()V = .ctor()
  getResourceDescriptor()Ljava/lang/String; = GetResourceDescriptor()
  setResourceDescriptor(Ljava/lang/String;)V = SetResourceDescriptor(string)
com/clevertap/android/sdk/java_websocket/handshake/HandshakeImpl1Server = Com.Clevertap.Android.Sdk.Java_websocket.Handshake.HandshakeImpl1Server
  <init>()V = .ctor()
  getHttpStatus()S = GetHttpStatus()
  getHttpStatusMessage()Ljava/lang/String; = GetHttpStatusMessage()
  setHttpStatus(S)V = SetHttpStatus(short)
  setHttpStatusMessage(Ljava/lang/String;)V = SetHttpStatusMessage(string)
com/clevertap/android/sdk/java_websocket/handshake/ServerHandshake = Com.Clevertap.Android.Sdk.Java_websocket.Handshake.IServerHandshake
  getHttpStatus()S = GetHttpStatus()
  getHttpStatusMessage()Ljava/lang/String; = GetHttpStatusMessage()
com/clevertap/android/sdk/java_websocket/handshake/ServerHandshakeBuilder = Com.Clevertap.Android.Sdk.Java_websocket.Handshake.IServerHandshakeBuilder
  setHttpStatus(S)V = SetHttpStatus(short)
  setHttpStatusMessage(Ljava/lang/String;)V = SetHttpStatusMessage(string)
com/clevertap/android/sdk/java_websocket/protocols/IProtocol = Com.Clevertap.Android.Sdk.Java_websocket.Protocols.IProtocol
  getProvidedProtocol()Ljava/lang/String; = ProvidedProtocol
  acceptProvidedProtocol(Ljava/lang/String;)Z = AcceptProvidedProtocol(string)
  copyInstance()Lcom/clevertap/android/sdk/java_websocket/protocols/IProtocol; = CopyInstance()
  toString()Ljava/lang/String; = ToString()
com/clevertap/android/sdk/java_websocket/protocols/Protocol = Com.Clevertap.Android.Sdk.Java_websocket.Protocols.Protocol
  <init>(Ljava/lang/String;)V = .ctor(string)
  getProvidedProtocol()Ljava/lang/String; = ProvidedProtocol
  acceptProvidedProtocol(Ljava/lang/String;)Z = AcceptProvidedProtocol(string)
  copyInstance()Lcom/clevertap/android/sdk/java_websocket/protocols/IProtocol; = CopyInstance()
com/clevertap/android/sdk/java_websocket/SocketChannelIOHelper = Com.Clevertap.Android.Sdk.Java_websocket.SocketChannelIOHelper
  batch(Lcom/clevertap/android/sdk/java_websocket/WebSocketImpl;Ljava/nio/channels/ByteChannel;)Z = Batch(Com.Clevertap.Android.Sdk.Java_websocket.WebSocketImpl, Java.Nio.Channels.IByteChannel)
  read(Ljava/nio/ByteBuffer;Lcom/clevertap/android/sdk/java_websocket/WebSocketImpl;Ljava/nio/channels/ByteChannel;)Z = Read(Java.Nio.ByteBuffer, Com.Clevertap.Android.Sdk.Java_websocket.WebSocketImpl, Java.Nio.Channels.IByteChannel)
  readMore(Ljava/nio/ByteBuffer;Lcom/clevertap/android/sdk/java_websocket/WebSocketImpl;Lcom/clevertap/android/sdk/java_websocket/WrappedByteChannel;)Z = ReadMore(Java.Nio.ByteBuffer, Com.Clevertap.Android.Sdk.Java_websocket.WebSocketImpl, Com.Clevertap.Android.Sdk.Java_websocket.IWrappedByteChannel)
com/clevertap/android/sdk/java_websocket/SSLSocketChannel = Com.Clevertap.Android.Sdk.Java_websocket.SSLSocketChannel
  <init>(Ljava/nio/channels/SocketChannel;Ljavax/net/ssl/SSLEngine;Ljava/util/concurrent/ExecutorService;Ljava/nio/channels/SelectionKey;)V = .ctor(Java.Nio.Channels.SocketChannel, Javax.Net.Ssl.SSLEngine, Java.Util.Concurrent.IExecutorService, Java.Nio.Channels.SelectionKey)
  isBlocking()Z = IsBlocking
  isNeedRead()Z = IsNeedRead
  isNeedWrite()Z = IsNeedWrite
  isOpen()Z = IsOpen
  close()V = Close()
  read(Ljava/nio/ByteBuffer;)I = Read(Java.Nio.ByteBuffer)
  readMore(Ljava/nio/ByteBuffer;)I = ReadMore(Java.Nio.ByteBuffer)
  write(Ljava/nio/ByteBuffer;)I = Write(Java.Nio.ByteBuffer)
  writeMore()V = WriteMore()
com/clevertap/android/sdk/java_websocket/SSLSocketChannel2 = Com.Clevertap.Android.Sdk.Java_websocket.SSLSocketChannel2
  <init>(Ljava/nio/channels/SocketChannel;Ljavax/net/ssl/SSLEngine;Ljava/util/concurrent/ExecutorService;Ljava/nio/channels/SelectionKey;)V = .ctor(Java.Nio.Channels.SocketChannel, Javax.Net.Ssl.SSLEngine, Java.Util.Concurrent.IExecutorService, Java.Nio.Channels.SelectionKey)
  bufferallocations = Bufferallocations
  emptybuffer = Emptybuffer
  exec = Exec
  inCrypt = InCrypt
  inData = InData
  outCrypt = OutCrypt
  readEngineResult = ReadEngineResult
  selectionKey = SelectionKey
  socketChannel = SocketChannel
  sslEngine = SslEngine
  tasks = Tasks
  writeEngineResult = WriteEngineResult
  isBlocking()Z = IsBlocking
  isConnected()Z = IsConnected
  isInboundDone()Z = IsInboundDone
  isNeedRead()Z = IsNeedRead
  isNeedWrite()Z = IsNeedWrite
  isOpen()Z = IsOpen
  close()V = Close()
  configureBlocking(Z)Ljava/nio/channels/SelectableChannel; = ConfigureBlocking(bool)
  connect(Ljava/net/SocketAddress;)Z = Connect(Java.Net.SocketAddress)
  consumeDelegatedTasks()V = ConsumeDelegatedTasks()
  createBuffers(Ljavax/net/ssl/SSLSession;)V = CreateBuffers(Javax.Net.Ssl.ISSLSession)
  finishConnect()Z = FinishConnect()
  read(Ljava/nio/ByteBuffer;)I = Read(Java.Nio.ByteBuffer)
  readMore(Ljava/nio/ByteBuffer;)I = ReadMore(Java.Nio.ByteBuffer)
  socket()Ljava/net/Socket; = Socket()
  write(Ljava/nio/ByteBuffer;)I = Write(Java.Nio.ByteBuffer)
  writeMore()V = WriteMore()
com/clevertap/android/sdk/java_websocket/util/Base64 = Com.Clevertap.Android.Sdk.Java_websocket.Util.Base64
  DO_BREAK_LINES = DoBreakLines
  ENCODE = Encode
  GZIP = Gzip
  NO_OPTIONS = NoOptions
  ORDERED = Ordered
  URL_SAFE = UrlSafe
  encodeBytes([B)Ljava/lang/String; = EncodeBytes(byte[])
  encodeBytes([BIII)Ljava/lang/String; = EncodeBytes(byte[], int, int, int)
  encodeBytesToBytes([BIII)[B = EncodeBytesToBytes(byte[], int, int, int)
com/clevertap/android/sdk/java_websocket/util/ByteBufferUtils = Com.Clevertap.Android.Sdk.Java_websocket.Util.ByteBufferUtils
  getEmptyByteBuffer()Ljava/nio/ByteBuffer; = EmptyByteBuffer
  transferByteBuffer(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I = TransferByteBuffer(Java.Nio.ByteBuffer, Java.Nio.ByteBuffer)
com/clevertap/android/sdk/java_websocket/util/Charsetfunctions = Com.Clevertap.Android.Sdk.Java_websocket.Util.Charsetfunctions
  asciiBytes(Ljava/lang/String;)[B = AsciiBytes(string)
  isValidUTF8(Ljava/nio/ByteBuffer;)Z = IsValidUTF8(Java.Nio.ByteBuffer)
  isValidUTF8(Ljava/nio/ByteBuffer;I)Z = IsValidUTF8(Java.Nio.ByteBuffer, int)
  stringAscii([B)Ljava/lang/String; = StringAscii(byte[])
  stringAscii([BII)Ljava/lang/String; = StringAscii(byte[], int, int)
  stringUtf8([B)Ljava/lang/String; = StringUtf8(byte[])
  stringUtf8(Ljava/nio/ByteBuffer;)Ljava/lang/String; = StringUtf8(Java.Nio.ByteBuffer)
  utf8Bytes(Ljava/lang/String;)[B = Utf8Bytes(string)
com/clevertap/android/sdk/java_websocket/WebSocket = Com.Clevertap.Android.Sdk.Java_websocket.IWebSocket
  getAttachment()Ljava/lang/Object; = Attachment
  setAttachment(Ljava/lang/Object;)V = Attachment
  getDraft()Lcom/clevertap/android/sdk/java_websocket/drafts/Draft; = Draft
  hasBufferedData()Z = HasBufferedData
  isClosed()Z = IsClosed
  isClosing()Z = IsClosing
  isFlushAndClose()Z = IsFlushAndClose
  isOpen()Z = IsOpen
  getLocalSocketAddress()Ljava/net/InetSocketAddress; = LocalSocketAddress
  getReadyState()Lcom/clevertap/android/sdk/java_websocket/enums/ReadyState; = ReadyState
  getRemoteSocketAddress()Ljava/net/InetSocketAddress; = RemoteSocketAddress
  getResourceDescriptor()Ljava/lang/String; = ResourceDescriptor
  close()V = Close()
  close(I)V = Close(int)
  close(ILjava/lang/String;)V = Close(int, string)
  closeConnection(ILjava/lang/String;)V = CloseConnection(int, string)
  send([B)V = Send(byte[])
  send(Ljava/lang/String;)V = Send(string)
  send(Ljava/nio/ByteBuffer;)V = Send(Java.Nio.ByteBuffer)
  sendFragmentedFrame(Lcom/clevertap/android/sdk/java_websocket/enums/Opcode;Ljava/nio/ByteBuffer;Z)V = SendFragmentedFrame(Com.Clevertap.Android.Sdk.Java_websocket.Enums.Opcode, Java.Nio.ByteBuffer, bool)
  sendFrame(Lcom/clevertap/android/sdk/java_websocket/framing/Framedata;)V = SendFrame(Com.Clevertap.Android.Sdk.Java_websocket.Framing.IFramedata)
  sendFrame(Ljava/util/Collection;)V = SendFrame(System.Collections.Generic.ICollection<Com.Clevertap.Android.Sdk.Java_websocket.Framing.IFramedata>)
  sendPing()V = SendPing()
com/clevertap/android/sdk/java_websocket/WebSocketAdapter = Com.Clevertap.Android.Sdk.Java_websocket.WebSocketAdapter
  <init>()V = .ctor()
  onWebsocketHandshakeReceivedAsClient(Lcom/clevertap/android/sdk/java_websocket/WebSocket;Lcom/clevertap/android/sdk/java_websocket/handshake/ClientHandshake;Lcom/clevertap/android/sdk/java_websocket/handshake/ServerHandshake;)V = OnWebsocketHandshakeReceivedAsClient(Com.Clevertap.Android.Sdk.Java_websocket.IWebSocket, Com.Clevertap.Android.Sdk.Java_websocket.Handshake.IClientHandshake, Com.Clevertap.Android.Sdk.Java_websocket.Handshake.IServerHandshake)
  onWebsocketHandshakeReceivedAsServer(Lcom/clevertap/android/sdk/java_websocket/WebSocket;Lcom/clevertap/android/sdk/java_websocket/drafts/Draft;Lcom/clevertap/android/sdk/java_websocket/handshake/ClientHandshake;)Lcom/clevertap/android/sdk/java_websocket/handshake/ServerHandshakeBuilder; = OnWebsocketHandshakeReceivedAsServer(Com.Clevertap.Android.Sdk.Java_websocket.IWebSocket, Com.Clevertap.Android.Sdk.Java_websocket.Drafts.Draft, Com.Clevertap.Android.Sdk.Java_websocket.Handshake.IClientHandshake)
  onWebsocketHandshakeSentAsClient(Lcom/clevertap/android/sdk/java_websocket/WebSocket;Lcom/clevertap/android/sdk/java_websocket/handshake/ClientHandshake;)V = OnWebsocketHandshakeSentAsClient(Com.Clevertap.Android.Sdk.Java_websocket.IWebSocket, Com.Clevertap.Android.Sdk.Java_websocket.Handshake.IClientHandshake)
  onWebsocketPing(Lcom/clevertap/android/sdk/java_websocket/WebSocket;Lcom/clevertap/android/sdk/java_websocket/framing/Framedata;)V = OnWebsocketPing(Com.Clevertap.Android.Sdk.Java_websocket.IWebSocket, Com.Clevertap.Android.Sdk.Java_websocket.Framing.IFramedata)
  onWebsocketPong(Lcom/clevertap/android/sdk/java_websocket/WebSocket;Lcom/clevertap/android/sdk/java_websocket/framing/Framedata;)V = OnWebsocketPong(Com.Clevertap.Android.Sdk.Java_websocket.IWebSocket, Com.Clevertap.Android.Sdk.Java_websocket.Framing.IFramedata)
com/clevertap/android/sdk/java_websocket/WebSocketFactory = Com.Clevertap.Android.Sdk.Java_websocket.IWebSocketFactory
  createWebSocket(Lcom/clevertap/android/sdk/java_websocket/WebSocketAdapter;Lcom/clevertap/android/sdk/java_websocket/drafts/Draft;)Lcom/clevertap/android/sdk/java_websocket/WebSocket; = CreateWebSocket(Com.Clevertap.Android.Sdk.Java_websocket.WebSocketAdapter, Com.Clevertap.Android.Sdk.Java_websocket.Drafts.Draft)
  createWebSocket(Lcom/clevertap/android/sdk/java_websocket/WebSocketAdapter;Ljava/util/List;)Lcom/clevertap/android/sdk/java_websocket/WebSocket; = CreateWebSocket(Com.Clevertap.Android.Sdk.Java_websocket.WebSocketAdapter, System.Collections.Generic.IList<Com.Clevertap.Android.Sdk.Java_websocket.Drafts.Draft>)
com/clevertap/android/sdk/java_websocket/WebSocketImpl = Com.Clevertap.Android.Sdk.Java_websocket.WebSocketImpl
  <init>(Lcom/clevertap/android/sdk/java_websocket/WebSocketListener;Lcom/clevertap/android/sdk/java_websocket/drafts/Draft;)V = .ctor(Com.Clevertap.Android.Sdk.Java_websocket.IWebSocketListener, Com.Clevertap.Android.Sdk.Java_websocket.Drafts.Draft)
  <init>(Lcom/clevertap/android/sdk/java_websocket/WebSocketListener;Ljava/util/List;)V = .ctor(Com.Clevertap.Android.Sdk.Java_websocket.IWebSocketListener, System.Collections.Generic.IList<Com.Clevertap.Android.Sdk.Java_websocket.Drafts.Draft>)
  DEFAULT_PORT = DefaultPort
  DEFAULT_WSS_PORT = DefaultWssPort
  inQueue = InQueue
  outQueue = OutQueue
  RCVBUF = Rcvbuf
  getAttachment()Ljava/lang/Object; = Attachment
  setAttachment(Ljava/lang/Object;)V = Attachment
  getChannel()Ljava/nio/channels/ByteChannel; = Channel
  setChannel(Ljava/nio/channels/ByteChannel;)V = Channel
  getDraft()Lcom/clevertap/android/sdk/java_websocket/drafts/Draft; = Draft
  hasBufferedData()Z = HasBufferedData
  isClosed()Z = IsClosed
  isClosing()Z = IsClosing
  isFlushAndClose()Z = IsFlushAndClose
  isOpen()Z = IsOpen
  getLocalSocketAddress()Ljava/net/InetSocketAddress; = LocalSocketAddress
  getReadyState()Lcom/clevertap/android/sdk/java_websocket/enums/ReadyState; = ReadyState
  getRemoteSocketAddress()Ljava/net/InetSocketAddress; = RemoteSocketAddress
  getResourceDescriptor()Ljava/lang/String; = ResourceDescriptor
  getSelectionKey()Ljava/nio/channels/SelectionKey; = SelectionKey
  setSelectionKey(Ljava/nio/channels/SelectionKey;)V = SelectionKey
  getWebSocketListener()Lcom/clevertap/android/sdk/java_websocket/WebSocketListener; = WebSocketListener
  close()V = Close()
  close(Lcom/clevertap/android/sdk/java_websocket/exceptions/InvalidDataException;)V = Close(Com.Clevertap.Android.Sdk.Java_websocket.Exceptions.InvalidDataException)
  close(I)V = Close(int)
  close(ILjava/lang/String;)V = Close(int, string)
  close(ILjava/lang/String;Z)V = Close(int, string, bool)
  closeConnection()V = CloseConnection()
  closeConnection(IZ)V = CloseConnection(int, bool)
  closeConnection(ILjava/lang/String;)V = CloseConnection(int, string)
  closeConnection(ILjava/lang/String;Z)V = CloseConnection(int, string, bool)
  decode(Ljava/nio/ByteBuffer;)V = Decode(Java.Nio.ByteBuffer)
  eot()V = Eot()
  flushAndClose(ILjava/lang/String;Z)V = FlushAndClose(int, string, bool)
  send([B)V = Send(byte[])
  send(Ljava/lang/String;)V = Send(string)
  send(Ljava/nio/ByteBuffer;)V = Send(Java.Nio.ByteBuffer)
  sendFragmentedFrame(Lcom/clevertap/android/sdk/java_websocket/enums/Opcode;Ljava/nio/ByteBuffer;Z)V = SendFragmentedFrame(Com.Clevertap.Android.Sdk.Java_websocket.Enums.Opcode, Java.Nio.ByteBuffer, bool)
  sendFrame(Lcom/clevertap/android/sdk/java_websocket/framing/Framedata;)V = SendFrame(Com.Clevertap.Android.Sdk.Java_websocket.Framing.IFramedata)
  sendFrame(Ljava/util/Collection;)V = SendFrame(System.Collections.Generic.ICollection<Com.Clevertap.Android.Sdk.Java_websocket.Framing.IFramedata>)
  sendPing()V = SendPing()
  startHandshake(Lcom/clevertap/android/sdk/java_websocket/handshake/ClientHandshakeBuilder;)V = StartHandshake(Com.Clevertap.Android.Sdk.Java_websocket.Handshake.IClientHandshakeBuilder)
  updateLastPong()V = UpdateLastPong()
com/clevertap/android/sdk/java_websocket/WebSocketListener = Com.Clevertap.Android.Sdk.Java_websocket.IWebSocketListener
  getLocalSocketAddress(Lcom/clevertap/android/sdk/java_websocket/WebSocket;)Ljava/net/InetSocketAddress; = GetLocalSocketAddress(Com.Clevertap.Android.Sdk.Java_websocket.IWebSocket)
  getRemoteSocketAddress(Lcom/clevertap/android/sdk/java_websocket/WebSocket;)Ljava/net/InetSocketAddress; = GetRemoteSocketAddress(Com.Clevertap.Android.Sdk.Java_websocket.IWebSocket)
  onWebsocketClose(Lcom/clevertap/android/sdk/java_websocket/WebSocket;ILjava/lang/String;Z)V = OnWebsocketClose(Com.Clevertap.Android.Sdk.Java_websocket.IWebSocket, int, string, bool)
  onWebsocketCloseInitiated(Lcom/clevertap/android/sdk/java_websocket/WebSocket;ILjava/lang/String;)V = OnWebsocketCloseInitiated(Com.Clevertap.Android.Sdk.Java_websocket.IWebSocket, int, string)
  onWebsocketClosing(Lcom/clevertap/android/sdk/java_websocket/WebSocket;ILjava/lang/String;Z)V = OnWebsocketClosing(Com.Clevertap.Android.Sdk.Java_websocket.IWebSocket, int, string, bool)
  onWebsocketError(Lcom/clevertap/android/sdk/java_websocket/WebSocket;Ljava/lang/Exception;)V = OnWebsocketError(Com.Clevertap.Android.Sdk.Java_websocket.IWebSocket, Java.Lang.Exception)
  onWebsocketHandshakeReceivedAsClient(Lcom/clevertap/android/sdk/java_websocket/WebSocket;Lcom/clevertap/android/sdk/java_websocket/handshake/ClientHandshake;Lcom/clevertap/android/sdk/java_websocket/handshake/ServerHandshake;)V = OnWebsocketHandshakeReceivedAsClient(Com.Clevertap.Android.Sdk.Java_websocket.IWebSocket, Com.Clevertap.Android.Sdk.Java_websocket.Handshake.IClientHandshake, Com.Clevertap.Android.Sdk.Java_websocket.Handshake.IServerHandshake)
  onWebsocketHandshakeReceivedAsServer(Lcom/clevertap/android/sdk/java_websocket/WebSocket;Lcom/clevertap/android/sdk/java_websocket/drafts/Draft;Lcom/clevertap/android/sdk/java_websocket/handshake/ClientHandshake;)Lcom/clevertap/android/sdk/java_websocket/handshake/ServerHandshakeBuilder; = OnWebsocketHandshakeReceivedAsServer(Com.Clevertap.Android.Sdk.Java_websocket.IWebSocket, Com.Clevertap.Android.Sdk.Java_websocket.Drafts.Draft, Com.Clevertap.Android.Sdk.Java_websocket.Handshake.IClientHandshake)
  onWebsocketHandshakeSentAsClient(Lcom/clevertap/android/sdk/java_websocket/WebSocket;Lcom/clevertap/android/sdk/java_websocket/handshake/ClientHandshake;)V = OnWebsocketHandshakeSentAsClient(Com.Clevertap.Android.Sdk.Java_websocket.IWebSocket, Com.Clevertap.Android.Sdk.Java_websocket.Handshake.IClientHandshake)
  onWebsocketMessage(Lcom/clevertap/android/sdk/java_websocket/WebSocket;Ljava/lang/String;)V = OnWebsocketMessage(Com.Clevertap.Android.Sdk.Java_websocket.IWebSocket, string)
  onWebsocketMessageBuffer(Lcom/clevertap/android/sdk/java_websocket/WebSocket;Ljava/nio/ByteBuffer;)V = OnWebsocketMessageBuffer(Com.Clevertap.Android.Sdk.Java_websocket.IWebSocket, Java.Nio.ByteBuffer)
  onWebsocketOpen(Lcom/clevertap/android/sdk/java_websocket/WebSocket;Lcom/clevertap/android/sdk/java_websocket/handshake/Handshakedata;)V = OnWebsocketOpen(Com.Clevertap.Android.Sdk.Java_websocket.IWebSocket, Com.Clevertap.Android.Sdk.Java_websocket.Handshake.IHandshakedata)
  onWebsocketPing(Lcom/clevertap/android/sdk/java_websocket/WebSocket;Lcom/clevertap/android/sdk/java_websocket/framing/Framedata;)V = OnWebsocketPing(Com.Clevertap.Android.Sdk.Java_websocket.IWebSocket, Com.Clevertap.Android.Sdk.Java_websocket.Framing.IFramedata)
  onWebsocketPong(Lcom/clevertap/android/sdk/java_websocket/WebSocket;Lcom/clevertap/android/sdk/java_websocket/framing/Framedata;)V = OnWebsocketPong(Com.Clevertap.Android.Sdk.Java_websocket.IWebSocket, Com.Clevertap.Android.Sdk.Java_websocket.Framing.IFramedata)
  onWriteDemand(Lcom/clevertap/android/sdk/java_websocket/WebSocket;)V = OnWriteDemand(Com.Clevertap.Android.Sdk.Java_websocket.IWebSocket)
com/clevertap/android/sdk/java_websocket/WrappedByteChannel = Com.Clevertap.Android.Sdk.Java_websocket.IWrappedByteChannel
  isBlocking()Z = IsBlocking
  isNeedRead()Z = IsNeedRead
  isNeedWrite()Z = IsNeedWrite
  readMore(Ljava/nio/ByteBuffer;)I = ReadMore(Java.Nio.ByteBuffer)
  writeMore()V = WriteMore()
com/clevertap/android/sdk/Logger = Com.Clevertap.Android.Sdk.Logger
  d(Ljava/lang/String;)V = D(string)
  d(Ljava/lang/String;Ljava/lang/String;)V = D(string, string)
  d(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V = D(string, string, Java.Lang.Throwable)
  d(Ljava/lang/String;Ljava/lang/Throwable;)V = D(string, Java.Lang.Throwable)
  debug(Ljava/lang/String;)V = Debug(string)
  debug(Ljava/lang/String;Ljava/lang/String;)V = Debug(string, string)
  debug(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V = Debug(string, string, Java.Lang.Throwable)
  debug(Ljava/lang/String;Ljava/lang/Throwable;)V = Debug(string, Java.Lang.Throwable)
  i(Ljava/lang/String;)V = I(string)
  i(Ljava/lang/String;Ljava/lang/String;)V = I(string, string)
  i(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V = I(string, string, Java.Lang.Throwable)
  i(Ljava/lang/String;Ljava/lang/Throwable;)V = I(string, Java.Lang.Throwable)
  info(Ljava/lang/String;)V = Info(string)
  info(Ljava/lang/String;Ljava/lang/String;)V = Info(string, string)
  info(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V = Info(string, string, Java.Lang.Throwable)
  info(Ljava/lang/String;Ljava/lang/Throwable;)V = Info(string, Java.Lang.Throwable)
  v(Ljava/lang/String;)V = V(string)
  v(Ljava/lang/String;Ljava/lang/String;)V = V(string, string)
  v(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V = V(string, string, Java.Lang.Throwable)
  v(Ljava/lang/String;Ljava/lang/Throwable;)V = V(string, Java.Lang.Throwable)
  verbose(Ljava/lang/String;)V = Verbose(string)
  verbose(Ljava/lang/String;Ljava/lang/String;)V = Verbose(string, string)
  verbose(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V = Verbose(string, string, Java.Lang.Throwable)
  verbose(Ljava/lang/String;Ljava/lang/Throwable;)V = Verbose(string, Java.Lang.Throwable)
com/clevertap/android/sdk/NotificationInfo = Com.Clevertap.Android.Sdk.NotificationInfo
  fromCleverTap = FromCleverTap
com/clevertap/android/sdk/PushType = Com.Clevertap.Android.Sdk.PushType
  FCM = Fcm
  valueOf(Ljava/lang/String;)Lcom/clevertap/android/sdk/PushType; = ValueOf(string)
  values()[Lcom/clevertap/android/sdk/PushType; = Values()
com/clevertap/android/sdk/RectangleImageView = Com.Clevertap.Android.Sdk.RectangleImageView
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;I)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet, int)
com/clevertap/android/sdk/SimpleBitmapProvider = Com.Clevertap.Android.Sdk.SimpleBitmapProvider
  <init>()V = .ctor()
  obtain(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap; = Obtain(int, int, Android.Graphics.Bitmap.Config)
  obtainByteArray(I)[B = ObtainByteArray(int)
  obtainIntArray(I)[I = ObtainIntArray(int)
  release(Landroid/graphics/Bitmap;)V = Release(Android.Graphics.Bitmap)
  release([B)V = Release(byte[])
  release([I)V = Release(int[])
com/clevertap/android/sdk/SquareImageView = Com.Clevertap.Android.Sdk.SquareImageView
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;I)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet, int)
com/clevertap/android/sdk/SyncListener = Com.Clevertap.Android.Sdk.ISyncListener
  profileDataUpdated(Lorg/json/JSONObject;)V = ProfileDataUpdated(Org.Json.JSONObject)
  profileDidInitialize(Ljava/lang/String;)V = ProfileDidInitialize(string)
com/clevertap/android/sdk/Utils = Com.Clevertap.Android.Sdk.Utils
  <init>()V = .ctor()
  optionalStringKey(Lorg/json/JSONObject;Ljava/lang/String;)Ljava/lang/String; = OptionalStringKey(Org.Json.JSONObject, string)
com/clevertap/android/sdk/UTMDetail = Com.Clevertap.Android.Sdk.UTMDetail
  <init>()V = .ctor()
  getCampaign()Ljava/lang/String; = Campaign
  setCampaign(Ljava/lang/String;)V = Campaign
  getMedium()Ljava/lang/String; = Medium
  setMedium(Ljava/lang/String;)V = Medium
  getSource()Ljava/lang/String; = Source
  setSource(Ljava/lang/String;)V = Source
